{
  "WorkItem": {
    "AffectedComponent": {
      "DisplayName": "",
      "Name": ""
    },
    "AssignedTo": "",
    "ClosedBy": "",
    "ClosedComment": "",
    "CommentCount": 3,
    "Custom": "",
    "Description": "Hi all,\n\nI have been experiencing a problem since changing over to NetOffice with my COMAddin, but only for some users who were using the VSTO version of the addin. Developed using Visual Studio 2010 SP1, Visual Studio generated msi, and Wix bootstrapper to deal with 32 and 64 bit Office versions, it's an addin for PowerPoint.\n\nThe issue is when loading the addin in PowerPoint is \"Location: mscoree.dll. Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in.\" Registry setting for the Addin's LoadBehavor changes from 3 to 2.\n\nI have researched for months and applied so many of the suggested changes from msdn, stackexchange and codeplex that I am now out of ideas and perplexed as to what else I need to do to get it working. Users uninstall the old version and deploy the new NetOffice version and then the addin  never works again. Here's some details of the things I've implemented or changed to get it working but without success. The only way to solve is for the user to get a new computer, so assume it's an issue that is resolvable in the registry/file system/GAC/CLR/Shim/Fusion/etc.\n\nBootstrapper details\n - Two Wix bootstrappers developed one a current user install and another for an all user install.\n - Each boostrapper detects whether 32bit or 64bit Office is installed and calls either the embedded 32 or 64 bit msi installer.\n - End user is given one bootstrapper or the other\n  => No issues here from Wix install logs.\n\nmsi installer \n - four msi installers built an included in the two bootstrappers, one for each office bitness and All User (UAC prompt)/Current install (no UAC prompt) option\n - The Target Platform set specifically to x86 or x64, rather than AnyCPU to avoid issues of incompatible bitness with office bitness\n - Registry entries seem to be deployed to the correct places for both the Current User and All User installs\n - Files are deployed to the correct place for the Current User (C:\\Users\\xxx\\AppData\\Local\\MyAppName\\AppName.dll + NO DLLs\n - Files are deployed to the correct place for the All Users (C:\\Users\\Public\\Documents\\MyAppName\\AppName.dll + NO DLLs\n - msi's are signed and timestamped\n - MyApp DLLs are strong named and signed\n=> Files and registry entries seem to be in correct locations for all of the four MSIs\n\nAddin code:\n - ComVisible flags set to true for the class and main project, and other classes as required, false for everything else\n - The addin Inherits COMAddin Implements Office.IRibbonExtensibility, IDTExtensibility2\n - OnConnection code is in a try/catch statement and debugs/exceptions written to text file\n => Code is working fine for most users, but some who had the old addin installed never have the first line of the code executed\n\nStartup\n - Netoffice and MyApp addin's DLLs and dependencies (resources and XML serializers) are being loaded correctly as reported by Fusion (Default)\n - Some errors reported by Fusion for Native Issue, but apparently these should be ignored?? (http://stackoverflow.com/questions/9734919/what-is-this-fusion-log-saying - see Hans Passant response)\n - if the DLLs are not found, even a probe file for POWERPNT.EXE.config to find the correct DLLs is in place and Fusion reports successes, but even when the DLLs are found the addin still doesn't load\n - The first line of OnConnection code does not seem to execute on computers with issues\n - LoadBehavor is changed from 3 to 2 and error \" Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in\". Addin is not in disabled items - just not ticked to load anymore on startup.\n\nSome things that may be outstanding for consideration or comment:\n - Cached versions of old dlls causing - how to find/remove them to ensure there is not some conflict 9even though the probe file should point the CLR to the right location?\n - Use of the GAC? But if all DLLs are loaded assume this is not required? GAC also breaks ability to run a the No Admin installer\n - Shim issues - if the DLLs are being loaded and the first line of code is not executing, could it be something in between like Shim?\n - Any other suggestions related to an addin working on VSTO and then changing to Netoffice that I need to take into account?\n\nAny assistance or pointers appreciated.",
    "HtmlDescription": "Hi all,<br />\n<br />\nI have been experiencing a problem since changing over to NetOffice with my COMAddin, but only for some users who were using the VSTO version of the addin. Developed using Visual Studio 2010 SP1, Visual Studio generated msi, and Wix bootstrapper to deal with 32 and 64 bit Office versions, it's an addin for PowerPoint.<br />\n<br />\nThe issue is when loading the addin in PowerPoint is &quot;Location: mscoree.dll. Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in.&quot; Registry setting for the Addin's LoadBehavor changes from 3 to 2.<br />\n<br />\nI have researched for months and applied so many of the suggested changes from msdn, stackexchange and codeplex that I am now out of ideas and perplexed as to what else I need to do to get it working. Users uninstall the old version and deploy the new NetOffice version and then the addin  never works again. Here's some details of the things I've implemented or changed to get it working but without success. The only way to solve is for the user to get a new computer, so assume it's an issue that is resolvable in the registry/file system/GAC/CLR/Shim/Fusion/etc.<br />\n<br />\nBootstrapper details<br />\n<ul>\n<li>Two Wix bootstrappers developed one a current user install and another for an all user install.</li>\n<li>Each boostrapper detects whether 32bit or 64bit Office is installed and calls either the embedded 32 or 64 bit msi installer.</li>\n<li>\nEnd user is given one bootstrapper or the other<br />\n  =&gt; No issues here from Wix install logs.<br />\n</li>\n</ul>\nmsi installer <br />\n<ul>\n<li>four msi installers built an included in the two bootstrappers, one for each office bitness and All User (UAC prompt)/Current install (no UAC prompt) option</li>\n<li>The Target Platform set specifically to x86 or x64, rather than AnyCPU to avoid issues of incompatible bitness with office bitness</li>\n<li>Registry entries seem to be deployed to the correct places for both the Current User and All User installs</li>\n<li>Files are deployed to the correct place for the Current User (C:\\Users\\xxx\\AppData\\Local\\MyAppName\\AppName.dll + NO DLLs</li>\n<li>Files are deployed to the correct place for the All Users (C:\\Users\\Public\\Documents\\MyAppName\\AppName.dll + NO DLLs</li>\n<li>msi's are signed and timestamped</li>\n<li>\nMyApp DLLs are strong named and signed<br />\n=&gt; Files and registry entries seem to be in correct locations for all of the four MSIs<br />\n</li>\n</ul>\nAddin code:<br />\n<ul>\n<li>ComVisible flags set to true for the class and main project, and other classes as required, false for everything else</li>\n<li>The addin Inherits COMAddin Implements Office.IRibbonExtensibility, IDTExtensibility2</li>\n<li>\nOnConnection code is in a try/catch statement and debugs/exceptions written to text file<br />\n =&gt; Code is working fine for most users, but some who had the old addin installed never have the first line of the code executed<br />\n</li>\n</ul>\nStartup<br />\n<ul>\n<li>Netoffice and MyApp addin's DLLs and dependencies (resources and XML serializers) are being loaded correctly as reported by Fusion (Default)</li>\n<li>Some errors reported by Fusion for Native Issue, but apparently these should be ignored?? (<a href=\"http://stackoverflow.com/questions/9734919/what-is-this-fusion-log-saying\" rel=\"nofollow\">http://stackoverflow.com/questions/9734919/what-is-this-fusion-log-saying</a> - see Hans Passant response)</li>\n<li>if the DLLs are not found, even a probe file for POWERPNT.EXE.config to find the correct DLLs is in place and Fusion reports successes, but even when the DLLs are found the addin still doesn't load</li>\n<li>The first line of OnConnection code does not seem to execute on computers with issues</li>\n<li>\nLoadBehavor is changed from 3 to 2 and error &quot; Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in&quot;. Addin is not in disabled items - just not ticked to load anymore on startup.<br />\n</li>\n</ul>\nSome things that may be outstanding for consideration or comment:<br />\n<ul>\n<li>Cached versions of old dlls causing - how to find/remove them to ensure there is not some conflict 9even though the probe file should point the CLR to the right location?</li>\n<li>Use of the GAC? But if all DLLs are loaded assume this is not required? GAC also breaks ability to run a the No Admin installer</li>\n<li>Shim issues - if the DLLs are being loaded and the first line of code is not executing, could it be something in between like Shim?</li>\n<li>\nAny other suggestions related to an addin working on VSTO and then changing to Netoffice that I need to take into account?<br />\n</li>\n</ul>\nAny assistance or pointers appreciated.<br />\n",
    "PlainDescription": "Hi all,\n\nI have been experiencing a problem since changing over to NetOffice with my COMAddin, but only for some users who were using the VSTO version of the addin. Developed using Visual Studio 2010 SP1, Visual Studio generated msi, and Wix bootstrapper to deal with 32 and 64 bit Office versions, it's an addin for PowerPoint.\n\nThe issue is when loading the addin in PowerPoint is \"Location: mscoree.dll. Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in.\" Registry setting for the Addin's LoadBehavor changes from 3 to 2.\n\nI have researched for months and applied so many of the suggested changes from msdn, stackexchange and codeplex that I am now out of ideas and perplexed as to what else I need to do to get it working. Users uninstall the old version and deploy the new NetOffice version and then the addin  never works again. Here's some details of the things I've implemented or changed to get it working but without success. The only way to solve is for the user to get a new computer, so assume it's an issue that is resolvable in the registry/file system/GAC/CLR/Shim/Fusion/etc.\n\nBootstrapper details\n\nTwo Wix bootstrappers developed one a current user install and another for an all user install.\nEach boostrapper detects whether 32bit or 64bit Office is installed and calls either the embedded 32 or 64 bit msi installer.\n\nEnd user is given one bootstrapper or the other\n  => No issues here from Wix install logs.\n\n\nmsi installer \n\nfour msi installers built an included in the two bootstrappers, one for each office bitness and All User (UAC prompt)/Current install (no UAC prompt) option\nThe Target Platform set specifically to x86 or x64, rather than AnyCPU to avoid issues of incompatible bitness with office bitness\nRegistry entries seem to be deployed to the correct places for both the Current User and All User installs\nFiles are deployed to the correct place for the Current User (C:\\Users\\xxx\\AppData\\Local\\MyAppName\\AppName.dll + NO DLLs\nFiles are deployed to the correct place for the All Users (C:\\Users\\Public\\Documents\\MyAppName\\AppName.dll + NO DLLs\nmsi's are signed and timestamped\n\nMyApp DLLs are strong named and signed\n=> Files and registry entries seem to be in correct locations for all of the four MSIs\n\n\nAddin code:\n\nComVisible flags set to true for the class and main project, and other classes as required, false for everything else\nThe addin Inherits COMAddin Implements Office.IRibbonExtensibility, IDTExtensibility2\n\nOnConnection code is in a try/catch statement and debugs/exceptions written to text file\n => Code is working fine for most users, but some who had the old addin installed never have the first line of the code executed\n\n\nStartup\n\nNetoffice and MyApp addin's DLLs and dependencies (resources and XML serializers) are being loaded correctly as reported by Fusion (Default)\nSome errors reported by Fusion for Native Issue, but apparently these should be ignored?? (http://stackoverflow.com/questions/9734919/what-is-this-fusion-log-saying - see Hans Passant response)\nif the DLLs are not found, even a probe file for POWERPNT.EXE.config to find the correct DLLs is in place and Fusion reports successes, but even when the DLLs are found the addin still doesn't load\nThe first line of OnConnection code does not seem to execute on computers with issues\n\nLoadBehavor is changed from 3 to 2 and error \" Load behavior: Not loaded. A runtime error occurred during the loading of the COM Add-in\". Addin is not in disabled items - just not ticked to load anymore on startup.\n\n\nSome things that may be outstanding for consideration or comment:\n\nCached versions of old dlls causing - how to find/remove them to ensure there is not some conflict 9even though the probe file should point the CLR to the right location?\nUse of the GAC? But if all DLLs are loaded assume this is not required? GAC also breaks ability to run a the No Admin installer\nShim issues - if the DLLs are being loaded and the first line of code is not executing, could it be something in between like Shim?\n\nAny other suggestions related to an addin working on VSTO and then changing to Netoffice that I need to take into account?\n\n\nAny assistance or pointers appreciated.\n",
    "LastUpdatedBy": "ekirk0",
    "LastUpdatedDate": "2014-07-16T06:24:41.917+02:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "netoffice",
    "ReportedBy": "scottaj",
    "ReportedDate": "2014-07-10T16:15:44.147+02:00",
    "CanContactReportedByUser": false,
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Error loading COMAddin in PowerPoint",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 21139,
    "HasUserVoted": false
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "> Each boostrapper detects whether 32bit or 64bit Office is installed and calls either the embedded 32 or 64 bit msi installer.\r\n\r\nWhat is your detection strategy.  As a 64 bit computer can have a 32 or 64 bit install of an office app.  A 32 bit office app cannot see into the ProgramFiles64Folder or System64Folder.  Same goes for the registry hive.  MS does some tricks with emulation of the hive based on if the process is 32 or 64 bit.  \r\n\r\n/////////\r\n\r\nIs there any difference to your issue when installing on a computer that has never had your product installed vs one where you have installed/uninstalled/upgraded?\r\n\r\n/////////\r\n\r\nHad this issue when the Count value does not get incremented on upgrades.  Suggest increment this count each build. HKLM\\SOFTWARE\\Microsoft\\Office\\14.0\\User Settings\\SomeApp.PowerPointAddin\r\n\r\nhttp://blogs.msdn.com/b/mshneer/archive/2007/09/05/deploying-your-vsto-add-in-to-all-users-part-ii.aspx    Newer versions of office use the user setting feature to populate key into the HKCU(curent user) hive.  When the office application starts the registry keys here will be populated into the users hive for use.The one issue is the orphaning of HKCU addin keys.  They are not removed by the installer nor office unless a delete is created.",
      "PostedBy": "ekirk0",
      "PostedDate": "2014-07-11T19:33:39.48+02:00",
      "WorkItemId": 21139,
      "Id": 203251
    },
    {
      "Message": "Some great questions ekirk0 - let me expand to see if it shines some light on the problem:\r\n\r\n1. 32/64 bit office detection strategy: The 32 or 64bit msi installer is launched depending on the detection of existence of PowerPoint Path from the 32 or 64bit branch of the registry - HKLM\\SOFTWARE\\Microsoft\\Office\\X.0\\PowerPoint\\InstallRoot\\Path (where X is 12, 14 or 15)=> There is no obvious issues here that I can find as the 32 and 64 versions are installed for new users without an issue. However for existing users the installer installs correctly, the registry entries are ready, DLLs are loaded as shown by Fusion, but addin errors after DLLs are loaded and therefore changes LoadBehavior from 3 to 2. Have I missed anything here?\r\n\r\n2. Differences in new vs upgrades: The issues seems to be on installing a new version of the Addin when an existing version exists. This is mostly from the old \"All User\" VSTO version of the addin to the new Current User or All User NetOffice version of the addin. The Current User msi install (no admin permission required) deploys files to c:\\Users and registry entries to HKCU, while the All user (Admin UAC) deploys to the Program Files ([ProgramFiles64Folder] for 64bit, and [ProgramFilesFolder] for 32bit msi) and HKLM registry. The \"Current user\" msi won't uninstall the old Addin as it requires Admin permissions, but even if the user manually does it themselves, there is still an issue. How can I find if something is cached or force the addin to look for the new version of the file in a new location? Maybe the MyAddin.DLL.Manifest Addin registry setting to force PowerPoint to find the location of the new files?\r\n\r\n3. This is an interesting article that I hadn't come across in months of research and does show a nice mechanism to add a HKLM registry into the HKCU on startup. However, as I am successfully deploying the current user key to this branch, I don't really see any advantage. Is there something else that the UserSetting registry does here that I've missed?\r\n\r\nI did notice the orphaning issue of addin registry branches on uninstall if DeleteUninstall = False, but as I set DeleteUninstall = True I changed the uninstall of the old msi within Orca to occur before the install of the new version. The result is slightly slower to install, but guarantees the registry branch will remain in tact no matter whether the old version DeleteUninstall is set to True or False, as the uninstall is done first rather than last.\r\n\r\nThanks",
      "PostedBy": "scottaj",
      "PostedDate": "2014-07-14T14:34:13.303+02:00",
      "WorkItemId": 21139,
      "Id": 203252
    },
    {
      "Message": "Maybe there is an issue with the com that isn't apparent.  Make a simple vb/js script that  loads your com object by name.  Then execute a function of that com object.  This will help you determine if this is either com object references messed up or something else.  Make a version property to return some info.  \r\n\r\n```var type = System.Type.GetTypeFromProgID(\"name of com class\");var obj = Activator.CreateInstance(type);obj.Version```\r\n\r\nhave you thought about using wix to build your msi also.  vsto has its limitations especially if you have to bust out orca to change things.\r\n\r\n",
      "PostedBy": "ekirk0",
      "PostedDate": "2014-07-16T06:24:41.917+02:00",
      "WorkItemId": 21139,
      "Id": 203253
    }
  ],
  "CanDeleteWorkItem": true,
  "CanDeleteComments": true
}