<?xml version="1.0" encoding="utf-8"?>
<CodeplexIssue xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>20295</Id>
  <Title>Parameter not optional exception thrown</Title>
  <DescriptionHtml xml:space="preserve"><![CDATA[Hi,

I'm working through an example tutorial to create a VBA addin using VB.net. The tutorial is here:
<a href="http://www.mztools.com/articles/2012/MZ2012013.aspx" rel="nofollow">http://www.mztools.com/articles/2012/MZ2012013.aspx</a>

I'm deviating from the tutorial by utilising NetOffice interop assemblies instead of the tutorial recommendation to create my own private assemblies. I have managed to get most of the code working but get a "Parameter not optional" exception when
 I try to press one of the custom buttons on the menu.

My code can be accessed at:
<a href="https://github.com/rossknudsen/VbaAddin/tree/master" rel="nofollow">https://github.com/rossknudsen/VbaAddin/tree/master</a>

The error occurs at line 128 of connect.vb. Any help to understand what is going on would be much appreciated.

Regards

Ross]]></DescriptionHtml>
  <Status>Proposed</Status>
  <Type>Unassigned</Type>
  <Impact>Unassigned</Impact>
  <Comments>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Exception details:System.Runtime.InteropServices.COMException (0x80004005): See inner exception(s) for details. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Runtime.InteropServices.COMException:
 Parameter not optional. (Exception from HRESULT: 0x8002000F (DISP_E_PARAMNOTOPTIONAL)) --- End of inner exception stack trace --- at System.RuntimeType.InvokeDispMethod(String name, BindingFlags invokeAttr, Object target, Object[] args, Boolean[] byrefModifiers,
 Int32 culture, String[] namedParameters) at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams) at System.Type.InvokeMember(String
 name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args, CultureInfo culture) at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray) at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[]
 paramsArray) at NetOffice.VBIDEApi._Windows.CreateToolWindow(AddIn addInInst, String progId, String caption, String guidPosition, Object docObj) at MyVbaAddin.Connect.CreateToolWindow(String toolWindowCaption, String toolWindowGuid, UserControl toolWindowUserControl)
 in C:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\MyVbaAddin\Connect.vb:line 128 at MyVbaAddin.Connect._CommandBarButton1_Click(CommandBarButton Ctrl, Boolean& CancelDefault) in C:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\MyVbaAddin\Connect.vb:line
 152]]></BodyHtml>
      <CreatedAt>2013-10-10T00:15:52.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[hello, 

the last argument is not marked as out parameter in NetOffice(currently not sure why)please do me a pleasure and try this linq exstension method instead of CreateToolWindowEx(and gimme reponse how it works)


public static class WindowsExtension { public static NetOffice.VBIDEApi.Window CreateToolWindowEx(this NetOffice.VBIDEApi._Windows windows, NetOffice.VBIDEApi.AddIn addInInst, string progId, string caption, string guidPosition, ref object docObj) { ParameterModifier[]
 modifiers = Invoker.CreateParamModifiers(false, false, false, false, true); object[] paramsArray = Invoker.ValidateParamsArray(addInInst, progId, caption, guidPosition, docObj); object returnItem = Invoker.MethodReturn(windows, "CreateToolWindow",
 paramsArray, modifiers); docObj = paramsArray[4]; NetOffice.VBIDEApi.Window newObject = NetOffice.Factory.CreateKnownObjectFromComProxy(windows, returnItem, NetOffice.VBIDEApi.Window.LateBindingApiWrapperType) as NetOffice.VBIDEApi.Window; return newObject;
 } }]]></BodyHtml>
      <CreatedAt>2013-10-14T08:54:25.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Hi Sebastian, 

I got a "type mismatch" exception: 

System.Runtime.InteropServices.COMException (0x80004005): See inner exception(s) for details. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Runtime.InteropServices.COMException:
 Type mismatch. (Exception from HRESULT: 0x80020005 (DISP_E_TYPEMISMATCH)) --- End of inner exception stack trace --- at System.RuntimeType.InvokeDispMethod(String name, BindingFlags invokeAttr, Object target, Object[] args, Boolean[] byrefModifiers, Int32
 culture, String[] namedParameters) at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams) at NetOffice.Invoker.MethodReturn(COMObject
 comObject, String name, Object[] paramsArray, ParameterModifier[] paramModifiers) in c:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\NetOffice\Invoker.cs:line 229 at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray,
 ParameterModifier[] paramModifiers) in c:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\NetOffice\Invoker.cs:line 237 at WindowsExtension.CreateToolWindowEx(_Windows windows, AddIn addInInst, String progId, String caption, String guidPosition, Object&
 docObj) in c:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\VBIDE\Classes\WindowsExtension.cs:line 10 at MyVbaAddin.Connect.CreateToolWindow(String toolWindowCaption, String toolWindowGuid, UserControl toolWindowUserControl) in C:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\MyVbaAddin\Connect.vb:line
 129 at MyVbaAddin.Connect._CommandBarButton1_Click(CommandBarButton Ctrl, Boolean& CancelDefault) in C:\Users\Ross\Documents\GitHub\VbaAddin\MyVbaAddin\MyVbaAddin\Connect.vb:line 153]]></BodyHtml>
      <CreatedAt>2013-10-15T02:42:39.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[I just added two import statements:"using System.Reflection;using NetOffice;"


I also imported the NetOffice source into the project on Github if you want. That should take care of all the external dependencies.]]></BodyHtml>
      <CreatedAt>2013-10-15T02:44:52.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[I have been playing around a bit and found that I can instantiate a toolwindow from VBA when the Addin is loaded using the following VBA code:


```Sub test() Dim wnd As Object Dim doc As Object Set wnd = Application.VBE.Windows.CreateToolWindow( _ Application.VBE.AddIns.Item(1), _ "MyVbaAddin.UserControlHost", _ "A caption goes here", _ "{e80c0630-a44c-44ad-86b5-61d8bf664d42}",
 _ doc) 
<pre><code>wnd.Visible = True
</code></pre>
End Sub``` I can't get this to work from the addin itself using the NetOffice interop methods or even a direct call on the objects themselves. I'm not sure that the problem lies in NetOffice now so I can try posting to StackExchange if you think it would be
 more useful.]]></BodyHtml>
      <CreatedAt>2013-10-15T23:21:11.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[hey man,please send me your solution to: public.sebastian[at]web.de and i can do some tests to analyze the problem.


*sebastian]]></BodyHtml>
      <CreatedAt>2013-10-16T04:42:56.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[update:i create a new topic for the issue:<a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/74074dc6-0109-43f2-b8f6-44712300f77c/how-i-can-use-interop-latebing-with-a-ref-argument-that-returns-controlaxsourcingsite?forum=clr" rel="nofollow">http://social.msdn.microsoft.com/Forums/vstudio/en-US/74074dc6-0109-43f2-b8f6-44712300f77c/how-i-can-use-interop-latebing-with-a-ref-argument-that-returns-controlaxsourcingsite?forum=clr</a>]]></BodyHtml>
      <CreatedAt>2013-10-17T08:38:22.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Hey thanks for taking an interest in my code. I just tried to Gmail the source to you and it decided to block the attachment.


You can download the source from GitHub using the download as zip option on the RHS which should give you everything. (link =
<a href="https://github.com/rossknudsen/VbaAddin/archive/master.zip" rel="nofollow">
https://github.com/rossknudsen/VbaAddin/archive/master.zip</a>)]]></BodyHtml>
      <CreatedAt>2013-10-17T12:15:09.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Hi Sebastian, 

I've been trying a bunch of different things to get this working. I went back and created my own private interop assemblies as per the original blog post. It works fine when doing it that way.


I would love to get the NetOffice libraries working though so I thought I would post back the interop signature method in case that helps you understand what's going wrong:``` Public Overridable Function CreateToolWindow( _ AddInInst As AddIn, _ ProgId As String,
 _ Caption As String, _ GuidPosition As String, _ ByRef DocObj As Object) _ As Window
<pre><code>End Function```</code></pre>]]></BodyHtml>
      <CreatedAt>2013-11-02T06:38:37.0000000+01:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Not sure if this is anything to do with it but Invoker.ValidateParam() returns Type.Missing when given Nothing/Null. I am supplying the last parameter, DocObj, as nothing as it gets set by the CreateToolWindow method. I'm just wondering if Type.Missing
 is not correct considering the above post shows that it is expecting an IDispatch interface?]]></BodyHtml>
      <CreatedAt>2013-11-02T08:05:47.0000000+01:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[OK I solved it!!!!!!
<ol>
<li>The CreateToolWindowEx() extension method solves the initial "Parameter Not Optional" COMException so I recommend you update the actual CreateToolWindow method to include this code.
</li><li>After that problem I was getting the "Type Mismatch" COMException. This wasn't related to the first problem but secondary. The problem was the DocObj parameter and my passing in Nothing/null. Invoker.ValidateParam() was turning it into Type.Missing.
 It seems that this is NOT an acceptable reference to pass in to this method. It seems we have to pass in some sort of IDispatch interface.
</li></ol>
As a hack I created a new instance of the UserControl class and passed that in as DocObj. Then the code runs as desired, creating the toolwindows. This is a bit ugly as I expect that the VBE creates another UserControl and replaces the DocObj reference with
 the second instance. Hence the first UserControl instance I passed in is a waste.


I think this issue could happen elsewhere when you pass in a ByRef parameter as Nothing/null. So its probably worth addressing.]]></BodyHtml>
      <CreatedAt>2013-11-02T08:46:40.0000000+01:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>ckuhn203</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Any plans on fixing this? It makes your beautiful project worthless for trying to create VBE add-ins.]]></BodyHtml>
      <CreatedAt>2015-06-11T21:56:01.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>ckuhn203</Author>
      <BodyHtml xml:space="preserve"><![CDATA[The same problem exists with CodeModule.Find(). Many of the parameters are defined as values when they should be defined as
<code>ref</code> params.]]></BodyHtml>
      <CreatedAt>2015-06-11T23:02:21.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[the problem is identified. 

in fact: NetOffice replace null argument values with System.Reflection.Type.Missing. (also for ref arguments) this replacement behavior cause problems for the ref's. (i'm sorry, ref argument in methods is a very rare scenario and i dont test this yet. btw:
 NetOffice is aware of ref arguments in event triggers. ) 

as hot fix: initialize your ref argument with "new object();" to avoid the NetOffice "replace behavior". if its not null then NetOffice dont touch them.


*Sebastian]]></BodyHtml>
      <CreatedAt>2015-06-14T02:03:48.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>pico1234</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Hi Sebastian, 

I've uploaded a patch for this issue. Now I review the issue after a few more years experience (and now knowing C#) I understand what is going on.


Point of interest is the <a href="https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.dispatchwrapper(v=vs.100).aspx" rel="nofollow">
DispatchWrapper</a> class which provides the key functionality. 

Hope that you can make sense of what I've uploaded and can make NetOffice better.


Regards 

Ross]]></BodyHtml>
      <CreatedAt>2015-06-14T08:27:07.0000000+02:00</CreatedAt>
    </CodeplexComment>
  </Comments>
  <ReportedBy>pico1234</ReportedBy>
  <ReportedAt>2013-10-09T19:47:36.0000000+00:00</ReportedAt>
</CodeplexIssue>