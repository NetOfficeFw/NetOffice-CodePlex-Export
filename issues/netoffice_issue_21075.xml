<?xml version="1.0" encoding="utf-8"?>
<CodeplexIssue xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>21075</Id>
  <Title>How to return a COMObject In a Collection?</Title>
  <DescriptionHtml xml:space="preserve"><![CDATA[internal static bool TryGetCustumXMLPart(this Document doc, string namespaceURI, out CustomXMLPart checkedPart) {
<pre><code>        checkedPart = null;
        using (CustomXMLParts parts = doc.CustomXMLParts) {
            foreach (CustomXMLPart part in doc.CustomXMLParts) {
                string partNamespaceURI = part.NamespaceURI;
                if (partNamespaceURI == namespaceURI) {
                    checkedPart = new CustomXMLPart(part); << ERROR
                    return true;
                }
            }
        }
        return false;
    }</code></pre>]]></DescriptionHtml>
  <Status>Proposed</Status>
  <Type>Unassigned</Type>
  <Impact>Unassigned</Impact>
  <Comments>
    <CodeplexComment>
      <Author>panewman</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Did you try 

<code>part.ParentObject.RemoveChildObject(part);</code>]]></BodyHtml>
      <CreatedAt>2014-06-12T11:16:54.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>cgh_chen</Author>
      <BodyHtml xml:space="preserve"><![CDATA[internal static T Detach(this T COMObj) where T : COMObject { if (COMObj != null) { COMObject p = COMObj.ParentObject; if (p != null) { p.RemoveChildObject(COMObj); } } return COMObj; }]]></BodyHtml>
      <CreatedAt>2014-06-14T10:19:14.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[please send me a sample solution(btw: i use VS2010, NET 4) to public.sebastian[at]web.de i need to reproduce the problem.


still not sure, whats the exception? whats the problem?, i see something goes wrong, but no chance for me to pin point the problem here. some code, no error/exception message..hey man! i'm not a sorcerer ;) gimme more input and will i help you as best i can
 you know. 

Anyway: your code looks cool, just 1% percent of all my customers use the com proxy management directly.<em>just nice to know</em> why you do this?


*Sebastian(again: send me a sample solution if possible)]]></BodyHtml>
      <CreatedAt>2014-07-19T06:55:29.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>cgh_chen</Author>
      <BodyHtml xml:space="preserve"><![CDATA[internal static bool TryGetCustumXMLPart(this Document doc, string namespaceURI, out CustomXMLPart checkedPart) { checkedPart = null; using (CustomXMLParts parts = doc.CustomXMLParts) { foreach (CustomXMLPart part in doc.CustomXMLParts) { string partNamespaceURI
 = part.NamespaceURI; if (partNamespaceURI == namespaceURI) { checkedPart = part.Detach(); //CALL extension method， This COMObject should be dispose explicit, after not using. return true; } } } return false; }]]></BodyHtml>
      <CreatedAt>2014-07-19T09:23:26.0000000+02:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>ekirk0</Author>
      <BodyHtml xml:space="preserve"><![CDATA[Instead of iterating all the custom xml use this api method and expect to only get one instance. I don't think your supposed to have more than one of the same namespace stored.


CustomXMLParts.SelectByNamespace(classNameSpace) 

Have a utility class for Storing and Loading a xml serialized class.See attached solution.


<code>NetOffice.WordApi.Application app = new NetOffice.WordApi.Application();app.DisplayAlerts = NetOffice.WordApi.Enums.WdAlertLevel.wdAlertsNone;app.Visible = true;


// add a new documentNetOffice.WordApi.Document doc = app.Documents.Add(); 

//create a new storage class instancevar info = new InfoStore() { ID = 112233, Name = "hello" };


//store info into the document custom xml partsCustomXmlPartUtil.Store(doc.CustomXMLParts, info); //load the serialized xml infoStore.var infoSaved = CustomXmlPartUtil.Load(doc.CustomXMLParts);


app.Quit();app.Dispose();</code>]]></BodyHtml>
      <CreatedAt>2014-07-20T00:42:32.0000000+02:00</CreatedAt>
    </CodeplexComment>
  </Comments>
  <ReportedBy>cgh_chen</ReportedBy>
  <ReportedAt>2014-06-12T04:46:08.0000000+00:00</ReportedAt>
</CodeplexIssue>