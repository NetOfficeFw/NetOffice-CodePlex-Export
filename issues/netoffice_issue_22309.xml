<?xml version="1.0" encoding="utf-8"?>
<CodeplexIssue xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>22309</Id>
  <Title>CustomXMLNode.AddNode throws exception; type mismatch</Title>
  <DescriptionHtml xml:space="preserve"><![CDATA[CustomXMLNode.AddNode seems to throw an exception due to a type mismatch. Tested in Excel 2007.


This is a copy of Microsoft's example for Custom XML Parts found under
<a href="https://msdn.microsoft.com/en-us/library/office/ff864167.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/office/ff864167.aspx</a>
<pre><code>
    NetOffice.ExcelApi.Workbook workbook = /* .... this is set to a proper workbook reference */;

    NetOffice.OfficeAPI.CustomXMLPart cxp1 = workbook.CustomXMLParts.Add("<invoice />");
    NetOffice.OfficeApi.CustomXMLNode cxn = cxp1.SelectSingleNode("/invoice");


    // the following line will throw a COMException exception
    // InnerException: Exception has been thrown by the target of an invocation
    //   -> InnerException: {"Type mismatch. (Exception from HRESULT: 0x80020005 (DISP_E_TYPEMISMATCH))"}
    cxp1.AddNode(( NetOffice.OfficeApi.CustomXMLNode)cxn, (string)"upcode", (string)"urn:invoice:namespace");
</code></pre>
Edit: This works when doing cxp1.DocumentElement.AppendChildNode(...).
Not quite sure if Microsoft's own example was wrong, or NetOffice causes an issue in the case described above?!]]></DescriptionHtml>
  <Status>Proposed</Status>
  <Type>Unassigned</Type>
  <Impact>Unassigned</Impact>
  <Comments />
  <ReportedBy>BogeyLab</ReportedBy>
  <ReportedAt>2016-07-06T11:34:47.0000000+00:00</ReportedAt>
</CodeplexIssue>