<?xml version="1.0" encoding="utf-8"?>
<CodeplexIssue xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>20470</Id>
  <Title>NetOffice.ExcelApi.Application.GetActiveInstance return null</Title>
  <DescriptionHtml xml:space="preserve"><![CDATA[When I've already have excel aplication with opened Workbook
<pre><code>            instance = NetOffice.ExcelApi.Application.GetActiveInstance();</code></pre>
returns existing instance and it's correct. 
But if the user change cell and leave the cell in Editing-Mode
the result of instance = NetOffice.ExcelApi.Application.GetActiveInstance() is null.

I need use exiting application anyway and not create new. How to get it?

P.S. It doesn't happen using Interop: the result is always correct 
instance = (Application)System.Runtime.InteropServices.Marshal.GetActiveObject("Excel.Application");]]></DescriptionHtml>
  <Status>Proposed</Status>
  <Type>Unassigned</Type>
  <Impact>Unassigned</Impact>
  <Comments>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[excel reject all programmatic access while calculate and edit cells but i'm wondering it works in interop. i want clearify the situation. as hotfix i suggest you to use interop. something like this:


var proxy = GetActiveObject("Excel.Application");new NetOffice.ExcelApi.Application(null, proxy);


or a process window technique that is demonstrated in latest source state (folder tests\concept tests\object from window) (this technique is used by default for GetActiveInstance(s) in NO 1.7, coming soon)


Sebastian]]></BodyHtml>
      <CreatedAt>2013-11-29T21:45:24.0000000+01:00</CreatedAt>
    </CodeplexComment>
    <CodeplexComment>
      <Author>rtverd</Author>
      <BodyHtml xml:space="preserve"><![CDATA[I've attached sample]]></BodyHtml>
      <CreatedAt>2013-11-29T23:07:36.0000000+01:00</CreatedAt>
    </CodeplexComment>
  </Comments>
  <ReportedBy>rtverd</ReportedBy>
  <ReportedAt>2013-11-29T17:53:33.0000000+00:00</ReportedAt>
</CodeplexIssue>