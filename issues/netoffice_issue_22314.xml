<?xml version="1.0" encoding="utf-8"?>
<CodeplexIssue xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>22314</Id>
  <Title>Worksheet.Range is not an indexer (C#)</Title>
  <DescriptionHtml xml:space="preserve"><![CDATA[In the standard libraries, Worksheet.Range is implemented as an indexer, but in NetOffice it is a simple method. This strikes me as weird since .Cells[] and .Offset[] both are indexers, using [] instead of ().


Standard Excel Interop:
<pre><code>var formattingRange = pivotSheet.Range[firstCell, lastCell];</code></pre>
NetOffice:
<pre><code>var formattingRange = pivotSheet.Range(firstCell, lastCell);</code></pre>
I had to edit some 400 instances of this when I converted a project to NetOffice, so I think I'm not the only one who would appreciate support for the .Range[a, b] syntax.]]></DescriptionHtml>
  <Status>Proposed</Status>
  <Type>Unassigned</Type>
  <Impact>Unassigned</Impact>
  <Comments>
    <CodeplexComment>
      <Author>SebastianDotNet</Author>
      <BodyHtml xml:space="preserve"><![CDATA[This looks like an issue. The problem behind is in the c# syntax that didnt support properties with optional arguments. The normal interop assemblies doesnt support this also. The Primary Interop Assemblies(PIA) from Microsoft does this better.

So Excel.Worksheet need a -real-simple Range property in NetOffice.
(The indexer comes from the Excel.Range class in your scenario)
This is easy to fix in a minute :) Thanks for pointing this out.

Sebastian]]></BodyHtml>
      <CreatedAt>2016-09-28T19:35:13.0000000+02:00</CreatedAt>
    </CodeplexComment>
  </Comments>
  <ReportedBy>JBjurstam</ReportedBy>
  <ReportedAt>2016-09-28T08:50:52.0000000+00:00</ReportedAt>
</CodeplexIssue>