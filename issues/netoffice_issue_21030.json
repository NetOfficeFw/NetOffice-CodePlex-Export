{
  "WorkItem": {
    "AffectedComponent": {
      "DisplayName": "",
      "Name": ""
    },
    "AssignedTo": "",
    "ClosedBy": "",
    "ClosedComment": "",
    "CommentCount": 4,
    "Custom": "",
    "Description": "I'm trying to port an Excel VSTO Addin over to NetOffice. So far I've got the Addin launching, but any time I try to make a call on a NetOffice object I get the following:\n```\n----- Source: NetOffice -----\nInner Exception 1: System.MissingMethodException: Method 'System.__ComObject.Add' not found.\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\nSystem.Runtime.InteropServices.COMException: See inner exception(s) for details.\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\n   at NetOffice.ExcelApi.Workbooks.Add()\n   at Hcg.Stinger.Connect.InitializeAutomationAddIn() in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 541\n   at Hcg.Stinger.Connect.OnStartupComplete(Array& custom, MainTaskPane taskPane) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 258\n----------\n```\n\nThe code is pretty straightforward:\n```\nExcel.Workbook  book = _excelApp.Workbooks.Add();\n```\n\nI also got the similar error when I called saying the Cursor did not exist, even though it show up in the intellisense:\n```\nExcel.Enums.XlMousePointer cursorOriginal = Excel.Enums.XlMousePointer.xlDefault;\n_excelApp.Cursor = Excel.Enums.XlMousePointer.xlWait;\n```\n\nIdeas?\n\nThanks, \n\nErick",
    "HtmlDescription": "I'm trying to port an Excel VSTO Addin over to NetOffice. So far I've got the Addin launching, but any time I try to make a call on a NetOffice object I get the following:<br />\n<pre><code>----- Source: NetOffice -----\nInner Exception 1: System.MissingMethodException: Method 'System.__ComObject.Add' not found.\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\nSystem.Runtime.InteropServices.COMException: See inner exception(s) for details.\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\n   at NetOffice.ExcelApi.Workbooks.Add()\n   at Hcg.Stinger.Connect.InitializeAutomationAddIn() in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 541\n   at Hcg.Stinger.Connect.OnStartupComplete(Array&amp; custom, MainTaskPane taskPane) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 258\n----------</code></pre>\n\nThe code is pretty straightforward:<br />\n<pre><code>Excel.Workbook  book = _excelApp.Workbooks.Add();</code></pre>\n\nI also got the similar error when I called saying the Cursor did not exist, even though it show up in the intellisense:<br />\n<pre><code>Excel.Enums.XlMousePointer cursorOriginal = Excel.Enums.XlMousePointer.xlDefault;\n_excelApp.Cursor = Excel.Enums.XlMousePointer.xlWait;</code></pre>\n\nIdeas?<br />\n<br />\nThanks, <br />\n<br />\nErick<br />\n",
    "PlainDescription": "I'm trying to port an Excel VSTO Addin over to NetOffice. So far I've got the Addin launching, but any time I try to make a call on a NetOffice object I get the following:\n----- Source: NetOffice -----\nInner Exception 1: System.MissingMethodException: Method 'System.__ComObject.Add' not found.\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\nSystem.Runtime.InteropServices.COMException: See inner exception(s) for details.\n   at NetOffice.Invoker.MethodReturn(COMObject comObject, String name, Object[] paramsArray)\n   at NetOffice.ExcelApi.Workbooks.Add()\n   at Hcg.Stinger.Connect.InitializeAutomationAddIn() in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 541\n   at Hcg.Stinger.Connect.OnStartupComplete(Array& custom, MainTaskPane taskPane) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 258\nThe code is pretty straightforward:\nExcel.Workbook  book = _excelApp.Workbooks.Add();\n\nI also got the similar error when I called saying the Cursor did not exist, even though it show up in the intellisense:\nExcel.Enums.XlMousePointer cursorOriginal = Excel.Enums.XlMousePointer.xlDefault;\n_excelApp.Cursor = Excel.Enums.XlMousePointer.xlWait;\n\nIdeas?\n\nThanks, \n\nErick\n",
    "LastUpdatedBy": "ericklind",
    "LastUpdatedDate": "2014-06-02T22:51:38.57+02:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "netoffice",
    "ReportedBy": "ericklind",
    "ReportedDate": "2014-05-27T18:36:46.28+02:00",
    "CanContactReportedByUser": false,
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "COM Exceptions in NetOffice (Excel)",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 21030,
    "HasUserVoted": false
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "what i need to know:\r\n\r\n1) Excel version(32 or 64 bit)2) NetOffice version3) Operating system(32 or 64 bit)\r\n\r\nat last: the operating system is a developer machine or just a user pc.\r\n\r\nthe fast way to pin point the problem is a sample solution. (send to public[at]sebastian.web.de and remove any private code, i dont need this)\r\n\r\n*Sebastian",
      "PostedBy": "SebastianDotNet",
      "PostedDate": "2014-05-28T01:16:58.107+02:00",
      "WorkItemId": 21030,
      "Id": 203230
    },
    {
      "Message": "Actually I did get it working.  I'm on Excel 2010 32 bit, VS 2010, .NET 4.0, NetOffice version 1.6, and Win 7 64 bit. But now I'm getting other COM issues when I try to access other things like the taskPane:```Inner Exception 1: System.Runtime.InteropServices.InvalidComObjectException: Attempt has been made to use a COM object that does not have a backing class factory.   at NetOffice.Invoker.PropertySet(COMObject comObject, String name, Object[] value)System.Runtime.InteropServices.COMException: See inner exception(s) for details.   at NetOffice.Invoker.PropertySet(COMObject comObject, String name, Object[] value)   at NetOffice.OfficeApi._CustomTaskPane.set_Visible(Boolean value)   at PrevisionAddIn.Addin.ShowExcelTaskPane(UserControl taskPane, String title) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\PrevisionAddIn\\Addin.cs:line 139   at Hcg.Stinger.TaskPaneFrameController.ShowController(ITaskPaneController controller) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\TaskPaneFrameController.cs:line 332   at Hcg.Stinger.TaskPaneFrameController.Show(EnumGlobalTaskPanes taskPane) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\TaskPaneFrameController.cs:line 146   at Hcg.Stinger.TaskPaneFrameController.AuthorizeTaskPanes() in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\TaskPaneFrameController.cs:line 174   at Hcg.Stinger.TaskPaneFrameController..ctor(MainTaskPane frame) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\TaskPaneFrameController.cs:line 83   at Hcg.Stinger.Connect.OnStartupComplete(Array& custom, MainTaskPane taskPane) in D:\\Code\\Prevision\\Source\\Hcg\\Stinger\\Connect.cs:line 264----------\r\n\r\n```\r\n\r\nSo the the code is pretty straight forward:``` private Office._CustomTaskPane _taskPane = null;\r\n\r\n public void CTPFactoryAvailable(object CTPFactoryInst)        {            try            {                Office.ICTPFactory ctpFactory = new NetOffice.OfficeApi.ICTPFactory(_app, CTPFactoryInst);                _taskPane = ctpFactory.CreateCTP(\"Hcg.Stinger.MainTaskPane\", \"PrevisionEPM\", Type.Missing);                _taskPane.DockPosition = MsoCTPDockPosition.msoCTPDockPositionRight;                _taskPane.DockPositionRestrict = MsoCTPDockPositionRestrict.msoCTPDockPositionRestrictNoChange;                _taskPane.Width = 300;                _taskPane.Visible = true;                _mainTaskPane = _taskPane.ContentControl as MainTaskPane;                ctpFactory.Dispose();            }            catch (Exception exception)            {                string message = string.Format(\"An error occured.{0}{0}{1}\", Environment.NewLine, exception.Message);                MessageBox.Show(message, _progId, MessageBoxButtons.OK, MessageBoxIcon.Error);            }        }  public void ShowExcelTaskPane(System.Windows.Forms.UserControl taskPane, string title)        {            _taskPane.Visible = false;            _taskPane.DockPosition = MsoCTPDockPosition.msoCTPDockPositionRight;            _taskPane.DockPositionRestrict = MsoCTPDockPositionRestrict.msoCTPDockPositionRestrictNoChange;            _taskPane.Visible = true;        }```It also sets my takspane so that none of the controls work on it at all.  Anything I need to do?",
      "PostedBy": "ericklind",
      "PostedDate": "2014-05-28T01:58:05.057+02:00",
      "WorkItemId": 21030,
      "Id": 203231
    },
    {
      "Message": "Hi Sebastian,The Saga continues.  I was finally able to get this doing what I needed to.  I noticed that on the TaskPanes.Add it was not doing anything to set or create the TaskPaneInfo.Pane, which I need for my app. I changed the code to this, and it worked:```public Addin()        {            try            {                TaskPanes.Add(typeof(MainTaskPane), \"Main Task Pane\");                TaskPanes[0].DockPosition = MsoCTPDockPosition.msoCTPDockPositionRight;                TaskPanes[0].DockPositionRestrict = MsoCTPDockPositionRestrict.msoCTPDockPositionRestrictNoHorizontal;                TaskPanes[0].Width = 250;                TaskPanes[0].Visible = true;                TaskPanes[0].Arguments = new object[] { this };\r\n\r\n                                this.OnStartupComplete += new OnStartupCompleteEventHandler(Addin_OnStartupComplete);                this.OnConnection += new OnConnectionEventHandler(Addin_OnConnection);                this.OnDisconnection += new OnDisconnectionEventHandler(Addin_OnDisconnection);            }            catch (Exception throwedException)            {                string details = string.Format(\"{1}{1}Details:{1}{1}{0}\", throwedException.Message, Environment.NewLine);                MessageBox.Show(\"An error occured in OnAction: \" + details, \"Error\", MessageBoxButtons.OK, MessageBoxIcon.Error);            }        }\r\n\r\n        public override void CTPFactoryAvailable(object CTPFactoryInst)        {            try            {                base.CTPFactoryAvailable(CTPFactoryInst);                _taskPane = TaskPanes[0];                _mainTaskPane = _taskPane.Pane.ContentControl as MainTaskPane;            }            catch (Exception exception)            {                string message = string.Format(\"An error occured.{0}{0}{1}\", Environment.NewLine, exception.Message);                MessageBox.Show(message, _progId, MessageBoxButtons.OK, MessageBoxIcon.Error);            }        }```Now the problem is that my taskpane is frozen as if it's disabled.  I cannot interact with any controls on it at all.  I've checked the status and it is enabled.  Is there something that I need to do in order to enable that otherwise?  I've looked through the samples and nothing stands out.\r\n\r\nThanks again for all your work!\r\n\r\n-Erick",
      "PostedBy": "ericklind",
      "PostedDate": "2014-05-28T22:42:18.487+02:00",
      "WorkItemId": 21030,
      "Id": 203232
    },
    {
      "Message": "Finally figured it out.  For some reason I have to attach all the events to the event handlers in the constructor of the task pane before I they will work.  Not sure why this should matter but it does.",
      "PostedBy": "ericklind",
      "PostedDate": "2014-06-02T22:51:38.57+02:00",
      "WorkItemId": 21030,
      "Id": 203233
    }
  ],
  "CanDeleteWorkItem": true,
  "CanDeleteComments": true
}