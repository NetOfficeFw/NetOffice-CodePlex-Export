{
  "WorkItem": {
    "AffectedComponent": {
      "DisplayName": "",
      "Name": ""
    },
    "AssignedTo": "",
    "ClosedBy": "",
    "ClosedComment": "",
    "CommentCount": 1,
    "Custom": "",
    "Description": "When I use NetOffice to creates an Excel COM Addin whose assembly version is not 1.0.0.0 and register it using RegAsm.exe with /codebase option, an extra \"CodeBase\" registry value is created under a (non-exisitng) assembly version 1.0.0.0.  When unregistering it using RegAsm /unregister, the registry entries for the version 1.0.0.0 is left unremoved in the registry.\n\nRegAsm creates a set of correct registry entries for the Assembly's correct version, as well as an extra entry for 1.0.0.0, so the registered COM Addin works.  Also, unremoved registry entries do nothing critical (except for slightly wasting the registry.)  So, this is a relatively minor issue.\n\nREPRODUCTION STEPS\n\n1. Run NetOffice Developer Toolbox, choose VS Project Wizard, then create an Automation Addin project for Excel.  (Leave other options as their default.)\n2. Open the generated project with Visual Studio.\n3. Open the property page for MyAssembly project, choose Application tab, click on Assembly Information..., then change the Assembly version to, say, 1.2.3.4.\n4. On Build tab, uncheck \"Register for COM interop\" so that VS doesn't update the registry.\n5. Build the solution to create MyAssembly.dll.\n6. Open an Administrator Command Prompt, cd to the directory where MyAssembly.dll resides, and run regasm MyAssembly.dll /codebase\n7. Run RegEdit and examine the entries below the COM Addin's CLSID.\n\nOBSERVED BEHAVIOUR\n\nBelow the InprocServer32 registry key, I see two subkeys: 1.0.0.0 and 1.2.3.4.  Below 1.0.0.0 there is a registry value \"CodeBase\".  (Registry values below 1.2.3.4 are fine, BTW.)\n\nSee the attached .reg file for details.  Lines 18 and 19 are unwanted.  (I'm on 64 bit Windows and developing a 32 bit addin, so the registry keys are below Wow6432Node.)\n\nEXPECTED BEHAVIOUR\n\nBelow the InprocServer32 registry key, I see only one subkey 1.2.3.4.\n\nGUESSED CAUSE\n\nNetOffice.ExcelApi.Tools.COMAddin.RegisterFunction(Type) contains a code to add a \"CodeBase\", which I suspect is misbehaving.  (Although I'm not sure it is really the cause of the issue nor what is the intended purpose of the code...)\n\nENVIRONMENT\n\nWindows 7 (64 bit), .NET Framework 4.0, Visual Studio 2013 Express, NetOffice 1.6, Toolbox 1.2.",
    "HtmlDescription": "When I use NetOffice to creates an Excel COM Addin whose assembly version is not 1.0.0.0 and register it using RegAsm.exe with /codebase option, an extra &quot;CodeBase&quot; registry value is created under a (non-exisitng) assembly version 1.0.0.0.  When unregistering it using RegAsm /unregister, the registry entries for the version 1.0.0.0 is left unremoved in the registry.<br />\n<br />\nRegAsm creates a set of correct registry entries for the Assembly's correct version, as well as an extra entry for 1.0.0.0, so the registered COM Addin works.  Also, unremoved registry entries do nothing critical (except for slightly wasting the registry.)  So, this is a relatively minor issue.<br />\n<br />\nREPRODUCTION STEPS<br />\n<ol>\n<li>Run NetOffice Developer Toolbox, choose VS Project Wizard, then create an Automation Addin project for Excel.  (Leave other options as their default.)</li>\n<li>Open the generated project with Visual Studio.</li>\n<li>Open the property page for MyAssembly project, choose Application tab, click on Assembly Information..., then change the Assembly version to, say, 1.2.3.4.</li>\n<li>On Build tab, uncheck &quot;Register for COM interop&quot; so that VS doesn't update the registry.</li>\n<li>Build the solution to create MyAssembly.dll.</li>\n<li>Open an Administrator Command Prompt, cd to the directory where MyAssembly.dll resides, and run regasm MyAssembly.dll /codebase</li>\n<li>\nRun RegEdit and examine the entries below the COM Addin's CLSID.<br />\n</li>\n</ol>\nOBSERVED BEHAVIOUR<br />\n<br />\nBelow the InprocServer32 registry key, I see two subkeys: 1.0.0.0 and 1.2.3.4.  Below 1.0.0.0 there is a registry value &quot;CodeBase&quot;.  (Registry values below 1.2.3.4 are fine, BTW.)<br />\n<br />\nSee the attached .reg file for details.  Lines 18 and 19 are unwanted.  (I'm on 64 bit Windows and developing a 32 bit addin, so the registry keys are below Wow6432Node.)<br />\n<br />\nEXPECTED BEHAVIOUR<br />\n<br />\nBelow the InprocServer32 registry key, I see only one subkey 1.2.3.4.<br />\n<br />\nGUESSED CAUSE<br />\n<br />\nNetOffice.ExcelApi.Tools.COMAddin.RegisterFunction(Type) contains a code to add a &quot;CodeBase&quot;, which I suspect is misbehaving.  (Although I'm not sure it is really the cause of the issue nor what is the intended purpose of the code...)<br />\n<br />\nENVIRONMENT<br />\n<br />\nWindows 7 (64 bit), .NET Framework 4.0, Visual Studio 2013 Express, NetOffice 1.6, Toolbox 1.2.<br />\n",
    "PlainDescription": "When I use NetOffice to creates an Excel COM Addin whose assembly version is not 1.0.0.0 and register it using RegAsm.exe with /codebase option, an extra \"CodeBase\" registry value is created under a (non-exisitng) assembly version 1.0.0.0.  When unregistering it using RegAsm /unregister, the registry entries for the version 1.0.0.0 is left unremoved in the registry.\n\nRegAsm creates a set of correct registry entries for the Assembly's correct version, as well as an extra entry for 1.0.0.0, so the registered COM Addin works.  Also, unremoved registry entries do nothing critical (except for slightly wasting the registry.)  So, this is a relatively minor issue.\n\nREPRODUCTION STEPS\n\nRun NetOffice Developer Toolbox, choose VS Project Wizard, then create an Automation Addin project for Excel.  (Leave other options as their default.)\nOpen the generated project with Visual Studio.\nOpen the property page for MyAssembly project, choose Application tab, click on Assembly Information..., then change the Assembly version to, say, 1.2.3.4.\nOn Build tab, uncheck \"Register for COM interop\" so that VS doesn't update the registry.\nBuild the solution to create MyAssembly.dll.\nOpen an Administrator Command Prompt, cd to the directory where MyAssembly.dll resides, and run regasm MyAssembly.dll /codebase\n\nRun RegEdit and examine the entries below the COM Addin's CLSID.\n\n\nOBSERVED BEHAVIOUR\n\nBelow the InprocServer32 registry key, I see two subkeys: 1.0.0.0 and 1.2.3.4.  Below 1.0.0.0 there is a registry value \"CodeBase\".  (Registry values below 1.2.3.4 are fine, BTW.)\n\nSee the attached .reg file for details.  Lines 18 and 19 are unwanted.  (I'm on 64 bit Windows and developing a 32 bit addin, so the registry keys are below Wow6432Node.)\n\nEXPECTED BEHAVIOUR\n\nBelow the InprocServer32 registry key, I see only one subkey 1.2.3.4.\n\nGUESSED CAUSE\n\nNetOffice.ExcelApi.Tools.COMAddin.RegisterFunction(Type) contains a code to add a \"CodeBase\", which I suspect is misbehaving.  (Although I'm not sure it is really the cause of the issue nor what is the intended purpose of the code...)\n\nENVIRONMENT\n\nWindows 7 (64 bit), .NET Framework 4.0, Visual Studio 2013 Express, NetOffice 1.6, Toolbox 1.2.\n",
    "LastUpdatedBy": "SebastianDotNet",
    "LastUpdatedDate": "2014-09-26T01:23:27.5+02:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "netoffice",
    "ReportedBy": "Alissa",
    "ReportedDate": "2014-08-13T04:22:32.09+02:00",
    "CanContactReportedByUser": false,
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "An extra \"CodeBase\" registry value for COM Addin",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 21224,
    "HasUserVoted": false
  },
  "FileAttachments": [
    {
      "FileId": 1600204,
      "FileName": "bug.reg",
      "WorkItemId": 21224,
      "DownloadUrl": "https://www.codeplex.com/Download/AttachmentDownload.ashx?ProjectName=netoffice&WorkItemId=21224&FileAttachmentId=1600204"
    }
  ],
  "Comments": [
    {
      "Message": "sry for the delay. (i do NetOffice in my free time)[0A][0A]It's true, the toolbox does some mistakes for the reg code.[0A]Thx for pointing this out. I suggest you to use NO 1.7 and start from the examples.[0A]The next toolbox version comes with NO 1.8 (and includes a visual ribbon designer and its totaly new developed)[0A][0A]BTW: It looks like you have much experience and you are an expert developer. for this reason, please contact me in my private skype account if you want: public.sebastian . give me a hint to this discussion in your contact agreement(otherwise, its ignored).[0A][0A]*Sebastian",
      "PostedBy": "SebastianDotNet",
      "PostedDate": "2014-09-26T01:23:27.5+02:00",
      "WorkItemId": 21224,
      "Id": 203256
    }
  ],
  "CanDeleteWorkItem": true,
  "CanDeleteComments": true
}