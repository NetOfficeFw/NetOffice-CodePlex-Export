[
  {
    "Id": "799870",
    "ThreadId": "344813",
    "Html": "\r\n<p>Hi, I am trying to use NetOffice to write a excel UDF. This UDF will write value to some cells in spreadsheet. The basic function looks good.</p>\r\n<p>However, if I use the _application.get_Range() method, excel.exe is still running in task manager after I close the excel. And if I comment out the get_Range() thing (marked as red in the following code), everything is good.&nbsp;</p>\r\n<p>Does anyone have some ideas? &nbsp;Did I dispose the object inappropriately? &nbsp;I appreciate your kindly help!</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre> <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> ExcelUDFBase : IDTExtensibility2\r\n    {\r\n       \r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Handle referencing back to the Excel session.</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">protected</span> MsExcel.Application MyExcelAppInstance;\r\n\r\n       \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">virtual</span> <span style=\"color:blue\">void</span> OnConnection(<span style=\"color:blue\">object</span> Application, ext_ConnectMode ConnectMode, <span style=\"color:blue\">object</span> AddInInst, <span style=\"color:blue\">ref</span> Array custom)\r\n        {\r\n            LateBindingApi.Core.Factory.Initialize();\r\n            MyExcelAppInstance = <span style=\"color:blue\">new</span> MsExcel.Application(<span style=\"color:blue\">null</span>, Application);\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> TestNetOffice : ExcelUDFBase\r\n    {\r\n        <span style=\"color:blue\">private</span> MsExcel.Range myRange;\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">object</span> _locker = <span style=\"color:blue\">new</span> <span style=\"color:blue\">object</span>();\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> NetOfficeTest()\r\n        {\r\n            <span style=\"color:blue\">lock</span> (_locker)\r\n            {\r\n                LateBindingApi.Core.Factory.Initialize();\r\n\r\n                myRange = (MsExcel.Range)MyExcelAppInstance.get_Caller(1);\r\n                <span style=\"color:green\">//MyExcelAppInstance.DisplayAlerts = false;</span>\r\n                MyExcelAppInstance.WorkbookBeforeCloseEvent &#43;= <span style=\"color:blue\">new</span> Application_WorkbookBeforeCloseEventHandler(MyExcelAppInstance_WorkbookBeforeCloseEvent);\r\n                <span style=\"color:blue\">var</span> t = <span style=\"color:blue\">new</span> Thread(dowork);\r\n                t.SetApartmentState(System.Threading.ApartmentState.STA);\r\n                t.Start();\r\n                <span style=\"color:blue\">return</span> myRange.get_Address(<span style=\"color:blue\">false</span>, <span style=\"color:blue\">false</span>, MsExcel.Enums.XlReferenceStyle.xlA1, Type.Missing, Type.Missing);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> dowork()\r\n                {\r\n                    <span style=\"color:blue\">try</span>\r\n                    {\r\n                        myRange.get_Offset(1, 0).Value = 1;\r\n<span style=\"color:#ff0000\">\r\n                       <strong> MsExcel.Range dataRange = MyExcelAppInstance.get_Range(&quot;A1:B3&quot;); // If Comment out this two lines, excel.exe will be killed;o.w. it is always there.\r\n                        dataRange.Value = 2;</strong></span>\r\n                    }\r\n                    <span style=\"color:blue\">catch</span>\r\n                    { }\r\n                }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MyExcelAppInstance_WorkbookBeforeCloseEvent(Workbook Wb, <span style=\"color:blue\">ref</span> <span style=\"color:blue\">bool</span> Cancel)\r\n        {\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                MyExcelAppInstance.Quit();\r\n                MyExcelAppInstance.Dispose();\r\n                MyExcelAppInstance = <span style=\"color:blue\">null</span>;\r\n            }\r\n            <span style=\"color:blue\">catch</span>\r\n            { \r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n</pre>\r\n<pre><span style=\"white-space:pre\"> </span>  <div style=\"color:black; background-color:white\"><pre> </pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-02-25T08:08:59.74-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "799889",
    "ThreadId": "344813",
    "Html": "<p>hello,</p>\r\n<p>i know some issues exists with calling excel from&nbsp;a sperated thread with COM Interop generally.</p>\r\n<p>1.) do you use Excel-DNA for UDF ? (recommended)<br />2.) it's possible, you send me a small test solution? (<a href=\"mailto:public.sebastian@web.de\">public.sebastian@web.de</a>)&nbsp; i do a test, check the proxy counts, etc. and give you an immediately response.<br />3.)&nbsp;i need more infos about your environment/ windows, excel, .net verson 32&nbsp;or 64 bit.</p>\r\n<p><br />Sebastian</p>",
    "PostedDate": "2012-02-25T09:57:14.203-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]