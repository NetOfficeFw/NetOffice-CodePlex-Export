[
  {
    "Id": "713690",
    "ThreadId": "283328",
    "Html": "\r\n<p>I would like to be able to:</p>\r\n<ol>\r\n<li>compare Word Interop COM proxies on a &quot;reference equality&quot; basis; and </li><li>map from a specific object (say a paragraph) to the collection it comes from, OR at least\r\n</li><li>determine whether two paragraphs are from the same section and which one comes relatively before the previous one\r\n</li></ol>\r\n<p>Why do I want to do this? I am trying to build a Word Add-In that acts similarly to a spell-checker in the sense that it runs in the background (by background I mean by regularly stealing time from the main Word thread using SendMessage) and scans the document\r\n for certain text &quot;tokens&quot;. I want to be able to keep a collection of the tokens around and update them as the document changes. A specific example of this is if the user edits a given paragraph, I want to rescan the paragraph and update my data structure which\r\n points to <em>that paragraph</em>. If there is no way to map between the paragraph the user edited in (i.e. the paragraph where the start of the selection range is) and a paragraph that I have &quot;stored&quot; in a data structure, I can't do this.</p>\r\n<p><span style=\"text-decoration:underline\">Example Code for item #1, above</span></p>\r\n<p>If I write the following VBA code:</p>\r\n<p style=\"padding-left:30px\">&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"padding-left:30px\"><span style=\"color:blue\">Dim</span> Para1 <span style=\"color:blue\">As</span> Paragraph\r\n<span style=\"color:blue\">Dim</span> Para2a <span style=\"color:blue\">As</span> Paragraph\r\n<span style=\"color:blue\">Dim</span> Para2b <span style=\"color:blue\">As</span> Paragraph\r\n<span style=\"color:blue\">Set</span> Para1 = ActiveDocument.Paragraphs(1)\r\n<span style=\"color:blue\">Set</span> Para2a = Para1.<span style=\"color:blue\">Next</span>\r\n<span style=\"color:blue\">Set</span> Para2b = Para1.<span style=\"color:blue\">Next</span>.<span style=\"color:blue\">Next</span>.Previous\r\n<span style=\"color:blue\">If</span> Para2a <span style=\"color:blue\">Is</span> Para2b <span style=\"color:blue\">Then</span>\r\n    Debug.Print (<span style=\"color:#a31515\">&quot;Para2a Is Para2b&quot;</span>)\r\n<span style=\"color:blue\">Else</span>\r\n    Debug.Print (<span style=\"color:#a31515\">&quot;Para2a Is Not Para2b&quot;</span>)\r\n<span style=\"color:blue\">End</span> <span style=\"color:blue\">If</span></pre>\r\n</div>\r\n<p>Then I am getting the output:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"padding-left:30px\">&quot;Para2a Is Not Para2b&quot;\r\n</pre>\r\n</div>\r\n<p>Which is perhaps physically true (different COM proxies) but not <em>logically</em> true. I need to be able to compare those paragraphs and determine if they are\r\n<em>logically</em> the same paragraph.</p>\r\n<p>For items 2 and 3 above, hopefully they will be self-explanatory. Say I have a paragraph (interop proxy) reference. I want to figure out &quot;where&quot; it is in the document. Does it belong to Section 1? Is it in a footer? Without this ability, all I can reasonably\r\n do to obtain an idea of where things come from is rescan the entire document every time it changes, which is of course absurdly inefficient and won't be timely enough for the app user.</p>\r\n<p>Any thoughts greatly appreciated! I'm happy to post additional information as needed.</p>\r\n",
    "PostedDate": "2011-12-17T14:55:05.85-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "714884",
    "ThreadId": "283328",
    "Html": "<p>hello,</p>\r\n<p>i have no experience with paragraphs, i see the definition and found the properties ID and ParaID but these propterties are only available in word 14.<br />the index position in the Paragraphs collection can be helpfull i believe.<br />Any paragraph has a Range, maybe you see here the position of your paragraph.<br /><br />Sebastian</p>",
    "PostedDate": "2011-12-20T08:12:11.217-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]