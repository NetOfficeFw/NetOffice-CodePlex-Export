[
  {
    "Id": "1254601",
    "ThreadId": "548109",
    "Html": "Hi folks,\r<br />\n<br />\nDoes anyone know how to leverage the enabled=&quot;false&quot;/&quot;true&quot; XML tag at runtime?\r<br />\n<br />\nOr maybe a better question for the group, how do you toggle enabling/disabling buttons in an excel ribbon? Basic functionality would be when I am logged in the buttons are enabled, and when logged out, the other buttons are disabled.\r<br />\n<br />\nSample XML Ribbon for Excel: \r<br />\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\r<br />\n&lt;customUI xmlns=&quot;<a href=\"http://schemas.microsoft.com/office/2006/01/customui\" rel=\"nofollow\">http://schemas.microsoft.com/office/2006/01/customui</a>&quot; onLoad=&quot;OnLoadRibbonUI&quot;&gt;\r<br />\n  &lt;ribbon&gt;<br />\n<pre><code>&lt;tabs&gt;\n  &lt;tab id=&quot;My.Addin&quot; label=&quot;My Addin&quot;&gt;\n    &lt;group id=&quot;group1&quot; label=&quot;My Addin&quot;&gt;\n      &lt;button id=&quot;aboutButton&quot; label=&quot;About&quot; onAction=&quot;OnClickAboutButton&quot; /&gt;\n      &lt;button id=&quot;settingsButton&quot; label=&quot;Settings&quot; onAction=&quot;OnClickSettingsButton&quot; /&gt; \n      &lt;button id=&quot;loginButton&quot; label=&quot;Login&quot; onAction=&quot;OnClickLoginButton&quot; /&gt; \n      &lt;separator  id=&quot;Separator1&quot; /&gt;\n      &lt;button id=&quot;myButton&quot; enabled =&quot;false&quot; label=&quot;My Button&quot; imageMso=&quot;CreateReportFromWizard&quot; size=&quot;large&quot; onAction=&quot;OnClickMyButton&quot; /&gt;\n      &lt;button id=&quot;myOtherButton&quot; enabled =&quot;false&quot; label=&quot;My Other Button&quot; imageMso=&quot;DataRefreshAll&quot; size=&quot;large&quot; onAction=&quot;OnClickMyOtherButton&quot; /&gt;\n    &lt;/group&gt;\n  &lt;/tab&gt;\n&lt;/tabs&gt;</code></pre>\n\n&lt;/ribbon&gt;\r<br />\n&lt;/customUI&gt;\r<br />\n<br />\n<br />\nThanks!!<br />\n",
    "PostedDate": "2014-06-09T16:44:18.45-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1254993",
    "ThreadId": "548109",
    "Html": "Figured it out..\r<br />\n<br />\nIn XML: \r<br />\nYou don't use the enabled= tag, you use the callback tag getEnabled=\r<br />\n<br />\n&lt;button id=&quot;myButton&quot; label=&quot;My Button&quot; imageMso=&quot;CreateReportFromWizard&quot; size=&quot;large&quot; onAction=&quot;OnClickMyButton&quot; getEnabled=&quot;getMyButtonEnabled&quot;  /&gt;\r<br />\n<br />\nIn C#:<br />\n<pre><code>    // our ribbon instance to manipulate ui at runtime \n    private Office.IRibbonUI RibbonUI { get; set; }\n\n     // defined in RibbonUI.xml to get a instance for ouer ribbon ui.\n    public void OnLoadRibbonUI(Office.IRibbonUI ribbonUI)\n    {\n        RibbonUI = ribbonUI;\n    }\n\n    // defined in RibbonUI.xml to get MyButton state, and to set via return value\n    public bool getReportsEnabled(Office.IRibbonControl control)\n    {\n        RibbonUI.InvalidateControl(control.Id);     //Must call InvalidateControl method on the button to force a refresh of it's state, set below\n\n        return false;                // RETURN false TO DISABLE, RETURN true TO ENABLE.\n    }\n\n</code></pre>\n\nSince everything is in callbacks, you initially grab the RibbonUI for later use. \r<br />\nThen you use the getEnabled tag to define the callback routine onload and when updated later. By passing true or false at callback time it sets the control enabled or disabled accordingly.\r<br />\nLast you call InvalidateControl on the button you just fiddled with, to refresh the UI state.\r<br />\n<br />\nStill perfecting my code, but hope this thread helps other NOOBS like me getting buttons to work.\r<br />\n<br />\nEnjoy!<br />\n",
    "PostedDate": "2014-06-10T15:50:25.737-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]