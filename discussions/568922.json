[
  {
    "Id": "1310071",
    "ThreadId": "568922",
    "Html": "Hi,\r<br />\n<br />\nim trying to deploy an outlook plugin without success so far.\r<br />\nif i run it from VS in debug mode it works, but if i try to create an installer (using ISS and also using a console app as an installer) it doesnt.\r<br />\n<br />\nthe installer registers the dll via regasm (and i sometime do it manually as well, via cmd), and also runs the following code as it was in the sample project:<br />\n<pre><code>RegistryKey key = Registry.ClassesRoot.CreateSubKey(&quot;CLSID\\\\{&quot; + &quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;.ToUpper() + &quot;}\\\\InprocServer32\\\\1.0.0.0&quot;);\n                            key.SetValue(&quot;CodeBase&quot;, @&quot;file:///&quot; + @codeBase);// + &quot;OutlookAddin.dll&quot;);\n                            key.Close();\n\n                            key = Registry.ClassesRoot.CreateSubKey(&quot;CLSID\\\\{&quot; + &quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;.ToUpper() + &quot;}\\\\InprocServer32&quot;);\n                            key.SetValue(&quot;CodeBase&quot;, @&quot;file:///&quot; + @codeBase);// + &quot;OutlookAddin.dll&quot;);\n                            key.Close();\n\n                            // add bypass key\n                            // support.microsoft.com/kb/948461\n                            key = Registry.ClassesRoot.CreateSubKey(&quot;Interface\\\\{000C0601-0000-0000-C000-000000000046}&quot;);\n                            string defaultValue = key.GetValue(&quot;&quot;) as string;\n                            if (null == defaultValue)\n                                key.SetValue(&quot;&quot;, &quot;Office .NET Framework Lockback Bypass Key&quot;);\n                            key.Close();\n\n                            // add outlook addin key\n\n                            Registry.ClassesRoot.CreateSubKey(@&quot;CLSID\\{&quot; + &quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;.ToUpper() + @&quot;}\\Programmable&quot;);\n                            Registry.CurrentUser.CreateSubKey(_addinOfficeRegistryKey + _prodId);\n                            RegistryKey rk = Registry.CurrentUser.OpenSubKey(_addinOfficeRegistryKey + _prodId, true);\n                            rk.SetValue(&quot;LoadBehavior&quot;, Convert.ToInt32(3));\n                            rk.SetValue(&quot;FriendlyName&quot;, _addinFriendlyName);\n                            rk.SetValue(&quot;Description&quot;, _addinDescription);\n                            rk.Close();</code></pre>\n\nIs this piece of code needed or only the regasm?\r<br />\n<br />\nalso, at the top of the Addin class i added this code:<br />\n<pre><code>[COMAddin(&quot;OutlookAddin&quot;, &quot;Outlook Addin&quot;, 3)]\n    [GuidAttribute(&quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;), ProgId(&quot;OutlookAddin&quot;), ComVisible(true)]\n    [RegistryLocation(RegistrySaveLocation.LocalMachine)]</code></pre>\n\nThis is somewhat similar to the code for the office plugin. \r<br />\n<br />\nI also have similar problem to one that was reported here before - if RegistrySaveLocation.CurrentUser or localMachine is chosen, the registry key will be created under currentUser anyhow and not LocalMachine.\r<br />\n<br />\nSo after all that, when i run the installer i can see the reg keys created but i get a loading error for the plugin and the LoadBehavior changes to 2 instead of 3. again, if i run it from debug mode in VS it runs ok, so the issue is not the code itself i suspect.\r<br />\n<br />\nusing net.office 1.6.0, winxp, outlook 2010, .net 4, vs 2010 express.\r<br />\n<br />\nthanks.<br />\n",
    "PostedDate": "2014-10-02T16:07:40.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310408",
    "ThreadId": "568922",
    "Html": "i wondering about NetOffice is used in space. But nice to hear because a german is currently on the ISS.\r<br />\n<br />\nAbout CurrentUser/Local Machine. This is a known bug in NO 1.6 :( i'm sorry. As hotfix i suggest you to overwrite the registry methods and create the reg keys at hand. \r<br />\n<br />\nRegasm register the COM component himself, this means the assembly is now just visible for the COM runtime system. (and Office is a COM application, fun fact: Visual Studio.NET is also a COM application) Its always your turn to create the office reg keys. (NetOffice try to do this a bit easier with some special annotations, btw. your addin inherites from Tools.COMAddin?)\r<br />\n<br />\nThe common exception is a security issue. you need admin privileges to register a COM component(and write access to local machine key). Moreover its cause issues to do this in a non desktop account(IIS network or system account) Its not clearly for me its a register or loading problem. Do you have any exception details so i can pin point the problem?\r<br />\n<br />\n*Sebastian<br />\n",
    "PostedDate": "2014-10-03T21:58:47.487-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310459",
    "ThreadId": "568922",
    "Html": "Hi,<br />\n<br />\nso after some more experiment i found out that:<br />\n1/ the code i mentioned above is sufficient to deploy bot office and outlook addons.<br />\n<br />\n2/ i found out that if i register the outlook addin, or build the code, it works. I can then unregister the addon and it is removed from outlook. <br />\n<br />\n<strong>But then</strong>:<br />\n1/ if i try to register the same dll again, it doesnt work.<br />\n2/ if i try to build again, still doesnt work.<br />\n3/ only when i <strong>rebuild</strong> the project it then works again.<br />\n<br />\nI'm trying to create a installer/uninstaller so i need this to work. Any ideas on why and how?<br />\n<br />\nthanks again.<br />\n<br />\n<br />\n<br />\n<br />\n<br />\nHi Sebastian,<br />\n<br />\nI'm sorry to disappoint you, but by ISS i meant Inno Setup - the software i create installer with.<br />\n<br />\nBut i just hosted 2 German couch surfers at my house for 2 days and enjoyed their stay very much. :-)<br />\n<br />\nAnyhow, about the LocalMachine\\CurrentUser - it's not a big deal - i saw i can change it on the ComRegisterFunctionAttribute and it changes to location of the reg keys for the outlook addon. For the office addon the reg keys are created at the localMachine level as needed.<br />\n<br />\nI have two addins, one for Office and one for Outlook.<br />\nNow, you said that its always my turn to create the reg keys, but i found that the RegAsm does that for me. I think its because this code is present at the <strong>office</strong> addin:<br />\n<pre><code>[COMAddin(&quot;OfficeAddin&quot;, &quot;Archive Addin&quot;, 3), CustomUI(&quot;OfficeAddin.RibbonUI.xml&quot;),\n    RegistryLocation(RegistrySaveLocation.LocalMachine),\n    MultiRegister(RegisterIn.Excel, RegisterIn.Word, RegisterIn.PowerPoint)]</code></pre>\n\nIs that correct?<br />\n<br />\nNow, for the <strong>Outlook</strong> addin the reg keys are also created when using RegAsm. <br />\ni assume its done by the [ComRegisterFunctionAttribute] function? is that correct?<br />\ni also added this code, which im not sure is necessary. Is it?<br />\n<pre><code> [COMAddin(&quot;OutlookAddin&quot;, &quot;Outlook Addin&quot;, 3)]\n    [GuidAttribute(&quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;), ProgId(&quot;OutlookAddin&quot;), ComVisible(true)]\n    [RegistryLocation(RegistrySaveLocation.LocalMachine)]</code></pre>\n\nSo, bottom line, if the keys are created by regAsm because of the presence of the codes mentioned, is that enough and should deploy the addin successfully? Because the office addin works for me but the outlook one doesnt. I get a message in outlook that sais the load failed and the addon load behavior is changes to 2 in the reg key.<br />\n<br />\nthanks again.<br />\n",
    "PostedDate": "2014-10-04T06:19:43.027-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1310469",
    "ThreadId": "568922",
    "Html": "So, regarding this:\r<br />\n&quot;I'm trying to create a installer/uninstaller so i need this to work. Any ideas on why and how?&quot;\r<br />\n<br />\nMaybe its a .NET issue, but when i unregister a dll and then reregister it, it doesnt work. What i finally setteled on is removing the addon from Outlook instead of unregistering the dll. that way the next time i register it it does show up on office.\r<br />\n<br />\nSo, seems like everything is working. Thanks for the help. I'm leaving the questions here for future reference.\r<br />\n<br />\nAnyone who has issues with deployment are invited to contact me.\r<br />\n<br />\n<br />\n<br />\n<strong>ehudklein wrote:</strong><br />\n<blockquote>\nHi,<br />\n<br />\nso after some more experiment i found out that:<br />\n1/ the code i mentioned above is sufficient to deploy bot office and outlook addons.<br />\n<br />\n2/ i found out that if i register the outlook addin, or build the code, it works. I can then unregister the addon and it is removed from outlook. <br />\n<br />\n<strong>But then</strong>:<br />\n1/ if i try to register the same dll again, it doesnt work.<br />\n2/ if i try to build again, still doesnt work.<br />\n3/ only when i <strong>rebuild</strong> the project it then works again.<br />\n<br />\nI'm trying to create a installer/uninstaller so i need this to work. Any ideas on why and how?<br />\n<br />\nthanks again.<br />\n<br />\n<br />\n<br />\n<br />\n<br />\nHi Sebastian,<br />\n<br />\nI'm sorry to disappoint you, but by ISS i meant Inno Setup - the software i create installer with.<br />\n<br />\nBut i just hosted 2 German couch surfers at my house for 2 days and enjoyed their stay very much. :-)<br />\n<br />\nAnyhow, about the LocalMachine\\CurrentUser - it's not a big deal - i saw i can change it on the ComRegisterFunctionAttribute and it changes to location of the reg keys for the outlook addon. For the office addon the reg keys are created at the localMachine level as needed.<br />\n<br />\nI have two addins, one for Office and one for Outlook.<br />\nNow, you said that its always my turn to create the reg keys, but i found that the RegAsm does that for me. I think its because this code is present at the <strong>office</strong> addin:<br />\n<pre><code>[COMAddin(&quot;OfficeAddin&quot;, &quot;Archive Addin&quot;, 3), CustomUI(&quot;OfficeAddin.RibbonUI.xml&quot;),\n    RegistryLocation(RegistrySaveLocation.LocalMachine),\n    MultiRegister(RegisterIn.Excel, RegisterIn.Word, RegisterIn.PowerPoint)]</code></pre>\n\nIs that correct?<br />\n<br />\nNow, for the <strong>Outlook</strong> addin the reg keys are also created when using RegAsm. <br />\ni assume its done by the [ComRegisterFunctionAttribute] function? is that correct?<br />\ni also added this code, which im not sure is necessary. Is it?<br />\n<pre><code> [COMAddin(&quot;OutlookAddin&quot;, &quot;Outlook Addin&quot;, 3)]\n    [GuidAttribute(&quot;85E0BBAF-11E7-4F70-957D-5682602A0933&quot;), ProgId(&quot;OutlookAddin&quot;), ComVisible(true)]\n    [RegistryLocation(RegistrySaveLocation.LocalMachine)]</code></pre>\n\nSo, bottom line, if the keys are created by regAsm because of the presence of the codes mentioned, is that enough and should deploy the addin successfully? Because the office addin works for me but the outlook one doesnt. I get a message in outlook that sais the load failed and the addon load behavior is changes to 2 in the reg key.<br />\n<br />\nthanks again.<br />\n</blockquote>\n",
    "PostedDate": "2014-10-04T07:41:45.45-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1312281",
    "ThreadId": "568922",
    "Html": "the annotations looks good so far...\r<br />\nif its possible, please send me a sample solution(incl. you current NO assemblies!!!) to public.sebastian[at]web.de\r<br />\nits the easiest/fastest way to pin point the problem. please remove any private code because no need for.\r<br />\n<br />\n*Sebastian<br />\n",
    "PostedDate": "2014-10-10T11:24:05.177-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1314053",
    "ThreadId": "568922",
    "Html": "Hi,\r<br />\n<br />\nI found what the problem was. For some reason, although the reg keys are created ok, and the codebase path is correct, when office starts it looks for the files under office's installation folder (in program files) instead of the path defined in the registry. I found that out using office addins debug loggin as explained here:\r<br />\n<br />\n<a href=\"http://blogs.msdn.com/b/vsod/archive/2008/04/22/troubleshooting-com-add-in-load-failures.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/vsod/archive/2008/04/22/troubleshooting-com-add-in-load-failures.aspx</a>\r<br />\n<br />\nIf i place the files under the office installation folder it works fine. The problem is that both the office and outlook addins should be deployed there, and office and outlook addon have different officeapi.dll files. I opened a new discussion on that subject.\r<br />\n<br />\nthanks for all the help.<br />\n",
    "PostedDate": "2014-10-16T10:33:17.28-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]