[
  {
    "Id": "1220738",
    "ThreadId": "538433",
    "Html": "Hi all,\r<br />\n<br />\nI recently started developing a PowerPoint addin in C# using NetOffice but now ran into problems:\r<br />\n<br />\nI'm trying to programmatically create and delete comments made by a particular author on a given slide. Creation works fine. However, after I programmatically deleted a comment for the first time, access to comments newly created after that fails with a COMException.\r<br />\n<br />\nHere are some sample sequences:<br />\n<ol>\n<li>delete, create, &lt;access to newly created comment&gt; -&gt; COMException</li>\n<li>create, delete, create, &lt;access to newly created comment&gt; -&gt; COMException</li>\n<li>\ncreate, create, create, delete, create, &lt;access to newly created comment&gt; -&gt; COMException<br />\n</li>\n</ol>\nAccess to previously existing comments still works after I used delete.\r<br />\n<br />\nThe following code is a minimal working example of the problem:<br />\n<pre><code>using PowerPoint = NetOffice.PowerPointApi;\nusing NetOffice.OfficeApi.Enums;\nusing System.Collections.Generic;\n\nnamespace CommentMWE\n{\n    class CommentMWE\n    {\n        private static string EXAMPLE_PRESENTATION_PATH = &quot;&lt;put your path here&gt;&quot;;\n\n        private static string COMMENT_AUTHOR_INITIALS = &quot;BG&quot;;\n        private static string COMMENT_AUTHOR_NAME = &quot;Bill Gates&quot;;\n\n\n        private static void CreateComment(PowerPoint.Slide slide, string author, string initials, string text)\n        {\n            PowerPoint.Comments comments = slide.Comments;\n            comments.Add(0, 0, author, initials, text);\n        }\n\n        private static void DeleteComments(PowerPoint.Slide slide, string author, string initials)\n        {\n            PowerPoint.Comments comments = slide.Comments;\n\n            //Avoid modifying the iterated collection by collecting\n            //the comments to delete in a list and then deleting them after iteration.\n            IList&lt;PowerPoint.Comment&gt; commentsToDelete = new List&lt;PowerPoint.Comment&gt;();\n\n            foreach (PowerPoint.Comment comment in comments)\n            {\n                if (CommentMatches(comment, author, initials))\n                {\n                    commentsToDelete.Add(comment);\n                }\n            }\n\n            foreach (PowerPoint.Comment commentToDelete in commentsToDelete)\n            {\n                commentToDelete.Delete();\n                //commentToDelete.Dispose(true);\n            }\n        }\n\n        private static bool CommentMatches(PowerPoint.Comment comment, string author, string initials)\n        {\n            if (comment == null)\n            {\n                return false;\n            }\n\n            string commentAuthorInitials = comment.AuthorInitials;\n\n            if (commentAuthorInitials != null &amp;&amp; commentAuthorInitials.Equals(initials))\n            {\n                string commentAuthor = comment.Author;\n\n                if (commentAuthor != null &amp;&amp; commentAuthor.Equals(author))\n                {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        static void Main(string[] args)\n        {\n            //Create application\n            PowerPoint.Application application = new PowerPoint.Application();\n\n            //Load presentation\n            PowerPoint.Presentation presentation = application.Presentations.Open(EXAMPLE_PRESENTATION_PATH, MsoTriState.msoFalse);\n            PowerPoint.Slide titleSlide = presentation.Slides[1];\n\n\n\n            //Exception is thrown when creating a comment after calling DeleteComments(..)\n\n            CreateComment(titleSlide, COMMENT_AUTHOR_NAME, COMMENT_AUTHOR_INITIALS, &quot;Irrelevant 1&quot;);\n            CreateComment(titleSlide, COMMENT_AUTHOR_NAME, COMMENT_AUTHOR_INITIALS, &quot;Irrelevant 2&quot;);\n            DeleteComments(titleSlide, COMMENT_AUTHOR_NAME, COMMENT_AUTHOR_INITIALS);\n\n            //Never gets here\n            CreateComment(titleSlide, COMMENT_AUTHOR_NAME, COMMENT_AUTHOR_INITIALS, &quot;Irrelevant 3&quot;);\n            DeleteComments(titleSlide, COMMENT_AUTHOR_NAME, COMMENT_AUTHOR_INITIALS);\n\n\n\n            //Save and close presentation\n            presentation.Save();\n            presentation.Close();\n\n            //Exit PowerPoint\n            application.Quit();\n            application.Dispose();\n        }\n    }\n}</code></pre>\n\nI searched the forums and the internet in general but came up with no results and spent the better part of two days debugging. Now, I'm at a complete loss and would appreciate any help that you could give me...\r<br />\n<br />\nThanks in advance!\r<br />\n<br />\nP.S.: I have some years of programming experience but am new to NetOffice and C# development in general. So if there is an obvious problem with my code, please do point that out! :)<br />\n",
    "PostedDate": "2014-03-09T06:22:29.87-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]