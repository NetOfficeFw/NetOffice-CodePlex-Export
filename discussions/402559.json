[
  {
    "Id": "939118",
    "ThreadId": "402559",
    "Html": "\r\n<p>Hi all!</p>\r\n<p>First of all, thanks a lot for this fantastic library! I have been working (and fighting) with interop calls to MS Office via .Net for so many years and now it's so easy to work with it.</p>\r\n<p>I have a question concerning a problem which occurred today when I was trying to access a VBA method inside an addin.</p>\r\n<p>The application is loaded like this, also the addin is loaded:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> app = <span style=\"color:blue\">new</span> Application();\r\n<span style=\"color:blue\">var</span> addin = app.AddIns.Add(<span style=\"color:#a31515\">&quot;addinFileName.ppam&quot;</span>);\r\naddin.AutoLoad = MsoTriState.msoFalse;\r\naddin.Loaded = MsoTriState.msoTrue;\r\n\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>When I set the visibility of the PowerPoint to true, I can see the addin is loaded properly.<br>\r\nNext, I open a presentation (I don't add the code because this is not important).<br>\r\nAnd now, I try to access a test method in the addin like this:</p>\r\n<p></p>\r\n<pre>var result = app.Run(&quot;addinFileName.ppam!TestAddin&quot;, &quot;test&quot;);</pre>\r\n<p></p>\r\n<p>Before executing this code I tested the way I access the macro code (which is a simple public function expecting a string and returning also a string) inside the PowerPoint VBA editor directly....this works.</p>\r\n<p>When I execute the above C# code I always get a COM exception saying:</p>\r\n<p>&quot;Sub or function not defined&quot;</p>\r\n<p>Does anybody out there have ever tried to access a macro of an addin with NetOffice?</p>\r\n<p>Thanks a lot in advance.</p>\r\n<p>&nbsp;</p>\r\n<p>Best regards,</p>\r\n<p>Thomas</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-11-09T06:20:44.507-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "939138",
    "ThreadId": "402559",
    "Html": "\r\n<p>Sorry, I put wrong code here:</p>\r\n<p>The code to call the addin methods looks like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> result = app.Run(<span style=\"color:#a31515\">&quot;addinFileName.ppam!TestAddin&quot;</span>, <span style=\"color:blue\">new</span> <span style=\"color:blue\">object</span>[] {<span style=\"color:#a31515\">&quot;test&quot;</span>});\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>And also I found out, that calling a method without parameters work! Also the return value is available!</p>\r\n<p>But methods with a parameter fail.</p>\r\n<p>Just one thought from my side:</p>\r\n<p>If the past I was working with a SafeComWrapper code here</p>\r\n<p>http://www.codeproject.com/Articles/10888/SafeCOMWrapper-Managed-Disposable-Strongly-Typed-s</p>\r\n<p>It had exactly the same problem!</p>\r\n<p>I was able to solve this issue by adjusting the way parameters are passed to the interop object.</p>\r\n<p>The problem could be inside the NetOffice implementation that the parameters I add to be passed to the VBA method will be added to the interop object itself!</p>\r\n<p>What do you think?</p>\r\n<p>Thanks and best regards,</p>\r\n<p>Thomas</p>\r\n",
    "PostedDate": "2012-11-09T06:37:24.95-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "939178",
    "ThreadId": "402559",
    "Html": "<p>I have checked the code and can offer a workaround (but I think you should make it cleaner):</p>\r\n<div style=\"color: black; background-color: white;\">The class NetOffice.Invoker.cs contains the MethodReturn method expecting the parameters.</div>\r\n<div style=\"color: black; background-color: white;\">There I have added an additional parameter (isRunMacroMethod) which should be set in the _Application.Run method.</div>\r\n<div style=\"color: black; background-color: white;\">Besides, I check if the parameters are available and contain both the VBA method name and the object array with the parameters.</div>\r\n<div style=\"color: black; background-color: white;\"></div>\r\n<div style=\"color: black; background-color: white;\">\r\n<div style=\"color: black; background-color: white;\">\r\n<pre> <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">object</span> MethodReturn(COMObject comObject, <span style=\"color: blue;\">string</span> name, <span style=\"color: blue;\">object</span>[] paramsArray, <span style=\"color: blue;\">bool</span> isRunMacroMethod = <span style=\"color: blue;\">false</span>)\r\n        {\r\n            <span style=\"color: blue;\">try</span>\r\n            {\r\n                <span style=\"color: blue;\">if</span> (comObject.IsDisposed)\r\n                    <span style=\"color: blue;\">throw</span> <span style=\"color: blue;\">new</span> InvalidComObjectException();\r\n\r\n                <span style=\"color: blue;\">if</span> ((Settings.EnableSafeMode) &amp;&amp; (!comObject.EntityIsAvailable(name, SupportEntityType.Method)))\r\n                    <span style=\"color: blue;\">throw</span> <span style=\"color: blue;\">new</span> EntityNotSupportedException(<span style=\"color: blue;\">string</span>.Format(<span style=\"color: #a31515;\">\"Method {0} is not available.\"</span>, name));\r\n                \r\n                <span style=\"color: blue;\">object</span> returnValue;\r\n                <span style=\"color: blue;\">if</span> (isRunMacroMethod &amp;&amp; paramsArray != <span style=\"color: blue;\">null</span> &amp;&amp; paramsArray.Length == 2 &amp;&amp; paramsArray[0].GetType() == <span style=\"color: blue;\">typeof</span>(<span style=\"color: blue;\">string</span>) &amp;&amp; paramsArray[1].GetType() == <span style=\"color: blue;\">typeof</span>(<span style=\"color: blue;\">object</span>[]))\r\n                {\r\n                    <span style=\"color: blue;\">var</span> newParas = <span style=\"color: blue;\">new</span> List&lt;<span style=\"color: blue;\">object</span>&gt; {paramsArray[0]};\r\n                    newParas.AddRange((<span style=\"color: blue;\">object</span>[])paramsArray[1]);\r\n                    \r\n                    returnValue = comObject.InstanceType.InvokeMember(name, BindingFlags.InvokeMethod | BindingFlags.GetProperty, <span style=\"color: blue;\">null</span>,\r\n                   comObject.UnderlyingObject, newParas.ToArray(), Settings.ThreadCulture);\r\n                }\r\n                <span style=\"color: blue;\">else</span>\r\n                {\r\n                    returnValue = comObject.InstanceType.InvokeMember(name, BindingFlags.InvokeMethod | BindingFlags.GetProperty, <span style=\"color: blue;\">null</span>,\r\n                    comObject.UnderlyingObject, paramsArray, Settings.ThreadCulture);\r\n                }\r\n                \r\n                <span style=\"color: blue;\">return</span> returnValue;\r\n            }\r\n            <span style=\"color: blue;\">catch</span> (Exception throwedException)\r\n            {\r\n                DebugConsole.WriteException(throwedException);\r\n                <span style=\"color: blue;\">throw</span> <span style=\"color: blue;\">new</span> System.Runtime.InteropServices.COMException(GetExceptionMessage(throwedException), throwedException);\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n</div>\r\n<div style=\"color: black; background-color: white;\">Passing the VBA method parameters like this to the underlying COM object will allow you to access VBA methods with parameters.</div>\r\n<div style=\"color: black; background-color: white;\">I hope you can take my approach to fix that issue and to release a new version of your library.</div>\r\n<div style=\"color: black; background-color: white;\"></div>\r\n<div style=\"color: black; background-color: white;\">Thanks and best regards,</div>\r\n<div style=\"color: black; background-color: white;\">Thomas</div>",
    "PostedDate": "2012-11-09T07:38:52.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "939186",
    "ThreadId": "402559",
    "Html": "<p>Sorry for this way of posting...I have created a new entry in the issue tracker.</p>",
    "PostedDate": "2012-11-09T07:52:36.32-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]