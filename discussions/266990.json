[
  {
    "Id": "649242",
    "ThreadId": "266990",
    "Html": "\r\n<p>VS2008, .NET35, C#, ExcelDNA, NetOffice</p>\r\n<p>in AutoOpen()</p>\r\n<p>I add 3 handlers to Excel App events</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LateBindingApi.Core.Factory.Initialize();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XLApp = new Excel.Application(null, ExcelDnaUtil.Application);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XLApp.SheetSelectionChangeEvent &#43;= ApplicationSheetSelectionChange;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XLApp.SheetDeactivateEvent &#43;= SheetDeactivatedEvent;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XLApp.SheetCalculateEvent &#43;= ApplicationSheetCalculate;&nbsp;</p>\r\n<p>When I open a xls file in Excel 2007, it takes 20-30 seconds. I am not sure why</p>\r\n<p>I track down in VS, it seems SheetCalculateEvent is called 3 times and every time an exception is thrown</p>\r\n<p>This is ApplicationSheetCalculate(),</p>\r\n<p><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void ApplicationSheetCalculate(object sh)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var rng = Helper.InvokeExcelMethodOnUSCulture(XLApp, &quot;Selection&quot;) as Range;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rng == null) return;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong><span style=\"color:#ff0000\">var formula = rng.GetValue(&quot;Formula&quot;) as string;</span></strong><br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(string.IsNullOrEmpty(formula)) return;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .....do something....<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Helper class has</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static object InvokeExcelMethodOnUSCulture(Application app, string memberName)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var excelCulture = new CultureInfo(1033);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var ret = app.GetType().InvokeMember(memberName,\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance, null, app, null, excelCulture);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ret;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static object GetValue(this Range range, string propertyName)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var excelCulture = new CultureInfo(1033);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong><em><span style=\"color:#ff0000\"> var ret = range.GetType().InvokeMember(propertyName,\r\n</span></em></strong><br>\r\n<strong><em><span style=\"color:#ff0000\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BindingFlags.GetProperty, null, range, null, excelCulture);</span></em></strong>&nbsp;&nbsp; //throw TargetInvokeException!?<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ret;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (Exception ex)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Helper.LogError(ex.StackTrace);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Another issue is: when users copy/paste entire sheet, Excel hangs for 2-3 minutes even if users do not use any functions in my AddIn.</p>\r\n<p>I bet it is related to the event handler. but I can't figure out why</p>\r\n<p>&nbsp;</p>\r\n<p>thanks</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-07-28T15:50:31.497-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649268",
    "ThreadId": "266990",
    "Html": "<p>Hello;<br />try the follows please:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">void</span> Foo()\r\n{\r\n   excelApplication.SheetCalculateEvent += <span style=\"color: blue;\">new</span> Excel.Application_SheetCalculateEventHandler(excelApplication_SheetCalculateEvent); \r\n}\r\n\r\n<span style=\"color: blue;\">void</span> excelApplication_SheetCalculateEvent(COMObject Sh) \r\n{ \r\n}\r\n\r\n\r\n\r\nWhat are doing in the helper class? the range object is not the native COMProxy but you have access to them: range.UnderlyingObject.<br />anyway, its not necessary to call latebind. netoffice do that for you. if you want to change the given thread culture then use<br /><br />LateBindingApi.Core.Settings.ThreadCulture<br />if you still want to use latebind calls try the static class Invoker from NetOffice<br /><br /><br /><br /></pre>\r\n<pre><a href=\"http://netoffice.codeplex.com/wikipage?title=Tec_Documentation_English\">http://netoffice.codeplex.com/wikipage?title=Tec_Documentation_English</a><br /><br /><br /><br /><br />\r\n<a href=\"http://netoffice.codeplex.com/wikipage?title=Tec_Faq_English\">http://netoffice.codeplex.com/wikipage?title=Tec_Faq_English</a></pre>\r\n</div>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><br /><br /><br /></span></span></span></p>",
    "PostedDate": "2011-07-28T16:47:51.783-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649596",
    "ThreadId": "266990",
    "Html": "<p>Thanks, Sebastian.</p>\r\n<p>No, it does not work.</p>\r\n<p>when I use UnderlyingObject as below,&nbsp; it gives an exception saying \"Method 'System.__ComObject.Formula' not found.\"</p>\r\n<p>(I do not want to change culture on current thread, I simply want to use en-us for current method.&nbsp; )</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static object GetValue(this Range range, string propertyName)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var excelCulture = new CultureInfo(1033);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var ret = range.UnderlyingObject.GetType().InvokeMember(propertyName, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BindingFlags.GetProperty, null, range, null, excelCulture);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ret;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (Exception ex)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Helper.LogError(ex.StackTrace);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2011-07-29T09:07:15.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649602",
    "ThreadId": "266990",
    "Html": "<p>you dont change the current thread with Settings.ThreadCulture<br /> take a look at core of netoffice</p>\n<p>public static object PropertyGet(object comObject, string name)<br /> {<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object returnValue = comObject.GetType().InvokeMember(name, BindingFlags.GetProperty, null, comObject, null, Settings.ThreadCulture);<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return returnValue;<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (Exception throwedException)<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new System.Runtime.InteropServices.COMException(\"\", throwedException);<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br /> }</p>\n<p>you see Settings.ThreadCulture was given in latebinded call.<br />i'm not sure whats the problem with your latebind call. i take a look in MS OLE Viewer at home.</p>",
    "PostedDate": "2011-07-29T09:17:22.147-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649633",
    "ThreadId": "266990",
    "Html": "<p>Sorry, I did not get you. This is what I tried.</p>\r\n<p>I copy the PropertyGet method and use it like this</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void ApplicationSheetCalculate(COMObject sh)<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var rng = Helper.InvokeExcelMethodOnUSCulture(XLApp, \"Selection\") as Range;<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rng == null) return;<br /><span style=\"color: #ff0000;\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var formula = Helper.PropertyGet(rng.UnderlyingObject, \"Formula\") as string;</span>&nbsp; //throw outofmemory exception <br /><span style=\"color: #ff0000;\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var formula2 = Helper.PropertyGet(rng, \"Formula\") as string;</span> //throw TargetInvocationException<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(string.IsNullOrEmpty(formula)) return;<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .....do something....<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>I did not use COMObject sh b/c it is Worksheet, I want to get current selected cells on the sheet, I could not find a way to do it through WorkSheet so I use Application.Selection</p>",
    "PostedDate": "2011-07-29T10:01:19.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649657",
    "ThreadId": "266990",
    "Html": "<p>i have still no idea why you want using native&nbsp;latebinding here but the follwing code runs fine in my test</p>\r\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><font face=\"Consolas\" size=\"2\">\r\n<p>&nbsp;</p>\r\n</font><span style=\"font-family: Consolas; color: #008000; font-size: x-small;\">// Initialize Api COMObject Support</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />LateBindingApi.Core.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Factory</span><span style=\"font-family: Consolas; font-size: x-small;\">.Initialize();</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><br />&nbsp;</span><span style=\"font-family: Consolas; color: #008000; font-size: x-small;\">// start excel and turn off msg boxes</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Application</span><span style=\"font-family: Consolas; font-size: x-small;\"> excelApplication = </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span><span style=\"font-family: Consolas; font-size: x-small;\"> Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Application</span><span style=\"font-family: Consolas; font-size: x-small;\">();</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />excelApplication.DisplayAlerts = <span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">false</span><span style=\"font-family: Consolas; font-size: x-small;\">;</span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;</span></span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; color: #008000; font-size: x-small;\">// add a new workbook</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Workbook</span><span style=\"font-family: Consolas; font-size: x-small;\"> workBook = excelApplication.Workbooks.Add();</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Worksheet</span><span style=\"font-family: Consolas; font-size: x-small;\"> sheet = workBook.Worksheets[1] </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">as</span><span style=\"font-family: Consolas; font-size: x-small;\"> Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Worksheet</span><span style=\"font-family: Consolas; font-size: x-small;\">;</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br />Excel.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">Range</span><span style=\"font-family: Consolas; font-size: x-small;\"> range = sheet.Cells[1, 1];</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br /></span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">var</span><span style=\"font-family: Consolas; font-size: x-small;\"> excelCulture = </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span><span style=\"font-family: Consolas; font-size: x-small;\"> System.Globalization.</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">CultureInfo</span><span style=\"font-family: Consolas; font-size: x-small;\">(1033);</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> <br /></span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">var</span><span style=\"font-family: Consolas; font-size: x-small;\"> ret = range.UnderlyingObject.GetType().InvokeMember(</span><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\">\"Formula\"</span><span style=\"font-family: Consolas; font-size: x-small;\">,</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;&nbsp;</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">BindingFlags</span><span style=\"font-family: Consolas; font-size: x-small;\">.GetProperty, </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">null</span><span style=\"font-family: Consolas; font-size: x-small;\">, range.UnderlyingObject, </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span><span style=\"font-family: Consolas; font-size: x-small;\"> </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">object</span><span style=\"font-family: Consolas; font-size: x-small;\">[0], </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">null</span><span style=\"font-family: Consolas; font-size: x-small;\">);</span></span></span></span></p>",
    "PostedDate": "2011-07-29T10:40:59.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649681",
    "ThreadId": "266990",
    "Html": "<p>thanks, I try your code, works fine for me.</p>\n<p>but my code still gives me an exception even if I change it to use</p>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">var</span><span style=\"font-family: Consolas; font-size: x-small;\"> ret = range.UnderlyingObject.GetType().InvokeMember(</span><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\">\"Formula\"</span><span style=\"font-family: Consolas; font-size: x-small;\">,</span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;&nbsp;</span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">BindingFlags</span><span style=\"font-family: Consolas; font-size: x-small;\">.GetProperty, </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">null</span><span style=\"font-family: Consolas; font-size: x-small;\">, range.UnderlyingObject, </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span><span style=\"font-family: Consolas; font-size: x-small;\"> </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">object</span><span style=\"font-family: Consolas; font-size: x-small;\">[0], </span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">null</span><span style=\"font-family: Consolas; font-size: x-small;\">);</span></span></p>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><br /></span></span></p>\n<p>Before I switch to NetOffice,&nbsp; if I have French version Excel and I use range.Formula, an exception will be thrown. but InvokeMemeber works b/c I can specify it run on en-us</p>\n<p>Now I switch to NetOffice, if I use Range.Formula directly in French version Excel, I will get an Exception, too.&nbsp; That's why I want to use InvokeMemember</p>\n<p>I want to get current selected cell, based on its formula,&nbsp; disable/enable certain items in GUI like menus, buttons, ribbons, etc.&nbsp;</p>\n<p>thanks</p>",
    "PostedDate": "2011-07-29T11:25:02.23-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "649718",
    "ThreadId": "266990",
    "Html": "<p>okay you got an exception while using range.Formula in NetOffice. this is a new information for me.<br />please gimme more informations about your environment. visual studio, windows,&nbsp;office 32 or 64 bit ..<br />are you sure a french excel its the reason?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-07-29T12:16:50.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]