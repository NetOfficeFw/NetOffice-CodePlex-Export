[
  {
    "Id": "1026017",
    "ThreadId": "439228",
    "Html": "Hi there,<br />\n<br />\ni have written this C# code fragment, but it still fails with a COMException.<br />\nIt seems that i have overseen sth. while opening the file as it assumes that the opened xlsx file is write-protected. Can anyone help me?<br />\n<pre><code>        /// &lt;summary&gt;\n        /// Converts html file to excel file (xlsx)\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;from&quot;&gt;this should be the full filename&lt;/param&gt;\n        public static void ConvertToExcel(String from)\n        {\n            Excel.Application cscExcelApp = null;\n            Excel.Workbook cscWorkbook;\n            Excel.Worksheet cscWorksheet;\n            try\n            {\n\n                // First Contact: Excel Prozess initialisieren\n                cscExcelApp = initExcel();\n                cscExcelApp.DisplayAlerts = false;\n                // Excel Datei anlegen: Workbook\n                var myCount = cscExcelApp.Workbooks.Count;\n\n                cscWorkbook = (Excel.Workbook)(cscExcelApp.Workbooks.Open(from,\n                        Type.Missing, false, Type.Missing, Type.Missing,\n                        Type.Missing, Type.Missing, Excel.Enums.XlPlatform.xlWindows, Type.Missing,\n                        Type.Missing, Type.Missing, Type.Missing, false,\n                        Type.Missing, Type.Missing));\n                cscWorksheet = (Excel.Worksheet)cscWorkbook.ActiveSheet;\n                cscExcelApp.ActiveWindow.DisplayGridlines = true;\n\n                transformData(cscExcelApp, cscWorksheet);\n\n                cscWorksheet.Name = &quot;report&quot;;\n\n                SetHeaderAndFooter(cscExcelApp, cscWorksheet);\n// everything work fine until here\n                cscWorkbook.SaveAs(&quot;D:\\\\temp\\\\report.xlsx&quot;,\n                    Excel.Enums.XlFileFormat.xlOpenXMLWorkbook, Type.Missing, Type.Missing, Type.Missing,\n                    false, Excel.Enums.XlSaveAsAccessMode.xlShared, Excel.Enums.XlSaveConflictResolution.xlLocalSessionChanges, Type.Missing,\n                    Type.Missing, Type.Missing, Type.Missing);\n                cscExcelApp.DisplayAlerts = false;\n                cscExcelApp.Dispose();\n                cscWorkbook.Close(true, &quot;D:\\\\temp\\\\report.xlsx&quot;, System.Reflection.Missing.Value);\n\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            finally\n            {\n                // Excel beenden\n                if (cscExcelApp != null)\n                {\n\n                    cscExcelApp.Quit();\n                }\n\n            }\n        }</code></pre>\n\nHere is the caught exception:<br />\n<pre><code>&quot;System.Runtime.InteropServices.COMException&quot; wurde aufgefangen.\n  HResult=-2147467259\n  Message=See inner exception(s) for details.\n  Source=NetOffice\n  ErrorCode=-2147467259\n  StackTrace:\n       bei NetOffice.Invoker.Method(COMObject comObject, String name, Object[] paramsArray)\n       bei NetOffice.ExcelApi._Workbook.SaveAs(Object filename, Object fileFormat, Object password, Object writeResPassword, Object readOnlyRecommended, Object createBackup, XlSaveAsAccessMode accessMode, Object conflictResolution, Object addToMru, Object textCodepage, Object textVisualLayout, Object local)\n       bei audi.ExcelGenerator.ConvertToExcel(String from)\n  InnerException: System.Reflection.TargetInvocationException\n       HResult=-2146232828\n       Message=Ein Aufrufziel hat einen Ausnahmefehler verursacht.\n       Source=mscorlib\n       StackTrace:\n            bei System.RuntimeType.InvokeDispMethod(String name, BindingFlags invokeAttr, Object target, Object[] args, Boolean[] byrefModifiers, Int32 culture, String[] namedParameters)\n            bei System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\n            bei System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args, CultureInfo culture)\n            bei NetOffice.Invoker.Method(COMObject comObject, String name, Object[] paramsArray)\n       InnerException: System.Runtime.InteropServices.COMException\n            HelpLink=C:\\Program Files\\Microsoft Office\\Office12\\1031\\XLMAIN11.CHM\n            HResult=-2146827284\n            Message=Auf die Datei konnte nicht zugegriffen werden. Versuchen Sie die folgenden Lösungsvorschläge:\n\n• Überprüfen Sie, ob der angegebene Ordner vorhanden ist.\n• Stellen Sie sicher, dass  der Ordner, in dem sich die Datei befindet, nicht schreibgeschützt ist.\n• Vergewissern Sie sich, dass der Dateiname keines der folgenden Zeichen enthält:  &lt;  &gt;  ?  [  ]  : | oder  *\n• Der Dateiname darf nicht länger als 218 Zeichen sein.\n            Source=Microsoft Office Excel\n            ErrorCode=-2146827284\n            InnerException: </code></pre>\n\n",
    "PostedDate": "2013-04-05T05:01:06.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1026038",
    "ThreadId": "439228",
    "Html": "Solved. After replacing argument Excel.Enums.XlSaveConflictResolution.xlLocalSessionChanges with Type.Missing it has worked.<br />\nI am also replaced Excel.Enums.XlSaveAsAccessMode.xlShared with Excel.Enums.XlSaveAsAccessMode.xlExclusive as i am not interested in that this document should be shared with another one ;)<br />\nIt was a strange behaviour. Maybe anyone can explain it.<br />\n",
    "PostedDate": "2013-04-05T05:33:54.647-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1026040",
    "ThreadId": "439228",
    "Html": "Shouldn't be an API easy to follow? Why are there so misstyled methods like open and saveas constructed?<br />\n",
    "PostedDate": "2013-04-05T05:37:48.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]