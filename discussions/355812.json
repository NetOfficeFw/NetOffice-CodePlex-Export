[
  {
    "Id": "836524",
    "ThreadId": "355812",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I try create Excel Add-in with Excel DNA (xll library)&nbsp; and NetOffice.&nbsp; (Excel 2002, VS Studio 2008, .NET 3,5, Windows 7 64bit)</p>\r\n<p>I test this code (VBA):</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">Sub</span> Test()\r\n<span style=\"color:blue\">Dim</span> r <span style=\"color:blue\">As</span> <span style=\"color:blue\">Integer</span>\r\n<span style=\"color:blue\">Dim</span> s <span style=\"color:blue\">As</span> <span style=\"color:blue\">Integer</span>\r\n<span style=\"color:blue\">Dim</span> colorIndex <span style=\"color:blue\">As</span> <span style=\"color:blue\">String</span>\r\n\r\n<span style=\"color:blue\">For</span> r = 1 <span style=\"color:blue\">To</span> 10000\r\n    <span style=\"color:blue\">For</span> s = 1 <span style=\"color:blue\">To</span> 20\r\n        colorIndex = Cells(r, s).Interior.colorIndex\r\n    <span style=\"color:blue\">Next</span> s\r\n<span style=\"color:blue\">Next</span> r\r\n\r\nMsgBox <span style=\"color:#a31515\">&quot;Finish&quot;</span>\r\n<span style=\"color:blue\">End</span> <span style=\"color:blue\">Sub</span>\r\n</pre>\r\n</div>\r\nCall below code with only ExcelDNA is OK :\r\n<p></p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[ExcelCommand(MenuText = <span style=\"color:#a31515\">&quot;TestExcelDna200t&quot;</span>)]\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> TestExcelDna200t() {           \r\n            <span style=\"color:blue\">string</span> colorIndex = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n            ExcelReference er;\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> r = 1; r &lt;= 10000 ; r&#43;&#43;) {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> c = 1; c &lt;= 20; c&#43;&#43;) {\r\n                    er = <span style=\"color:blue\">new</span> ExcelReference(r &#43; 1, c &#43; 1);\r\n                    colorIndex = XlCall.Excel(XlCall.xlfGetCell, 38, er).ToString();                    \r\n                }\r\n            }           \r\n        }<br>&nbsp;<br>But code below with Excel DNA and NetOffice isn't good:<br><div style=\"color:black; background-color:white\"><pre>[ExcelCommand(MenuText = <span style=\"color:#a31515\">&quot;TestNetOffice200t&quot;</span>)]\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> TestNetOffice200t() {\r\n            LateBindingApi.Core.Factory.Initialize();\r\n            NetOffice.ExcelApi.Application a = <span style=\"color:blue\">new</span> NetOffice.ExcelApi.Application(<span style=\"color:blue\">null</span>, ExcelDnaUtil.Application);\r\n                       \r\n            <span style=\"color:blue\">string</span> colorIndex = <span style=\"color:#a31515\">&quot;&quot;</span>;\r\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> r = 1; r &lt;= 10000; r&#43;&#43;) {\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> c = 1; c &lt;= 20; c&#43;&#43;) {\r\n                    colorIndex = a.Cells[r, c].Interior.ColorIndex.ToString();                      \r\n                }\r\n            }           \r\n            MessageBox.Show(<span style=\"color:#a31515\">&quot;Finish&quot;</span>);\r\n        }<br></pre>\r\n</div>\r\n<span><span>I get this error:</span></span></pre>\r\n<div><span><span>&quot;Excel cannot complete this task with available resources that are available.\r\n</span><span>Select less data or close other applications.</span></span>&quot;</div>\r\n<br>\r\n<div><span>&quot;Insufficient system resources to complete view&quot;</span></div>\r\n<div></div>\r\n<div><span>And E</span>xcel in memory occupies cca 320 000kB.</div>\r\n<div></div>\r\n<div><span>For less cells code is OK, but occupies lot of memory and slower. </span>\r\n</div>\r\n<div><span>eg. same code, only for 20 000 cells duration 0,32s (VBA), 0,6s (ExcelDNA), 2,5s (ExcelDNA&#43;NetOffice)</span></div>\r\n<div></div>\r\n<div><span>Please, can you help me?</span></div>\r\n<div></div>\r\n<div><span>Radek<br>\r\n</span></div>\r\n<div></div>\r\n<div><span><br>\r\n</span></div>\r\n<div></div>\r\n<div><span><br>\r\n</span></div>\r\n<div></div>\r\n<div><span><br>\r\n</span></div>\r\n<pre><br></pre>\r\n</div>\r\n<p></p>\r\n<p><img id=\"smallDivTip\" src=\"\" alt=\"\" style=\"z-index:90; border:0px solid blue; left:404px; top:67px\"></p>\r\n",
    "PostedDate": "2012-05-15T02:31:03.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "836903",
    "ThreadId": "355812",
    "Html": "<p>hey radek,<br /><br />NetOffice is based on the COM Automation Interface. Excel DNA works different and much faster of course.<br />you have to free the created com objects. you create 10000 * 20 com objects without release in your code.(*heavy*)<br />you have serveral options:</p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">For</span> r = 1 <span style=\"color: blue;\">To</span> 10000\r\n\r\n    <span style=\"color: blue;\">For</span> s = 1 <span style=\"color: blue;\">To</span> 20        \r\n  \r\n       <span style=\"color: blue;\">Dim</span> r <span style=\"color: blue;\">as</span> Excel.Range = myWorksheet.Cells(r, s)\r\n       colorIndex = r.Interior.colorIndex       \r\n       <span style=\"color: green;\">' do more here         </span>\r\n\r\n       r.Dispose() <span style=\"color: green;\">' free the object</span>\r\n\r\n    <span style=\"color: blue;\">Next</span> s\r\n\r\n<span style=\"color: blue;\">Next</span> r\r\n\r\n<span style=\"color: green;\">'ranother way to us is:  </span>\r\n\r\n<span style=\"color: blue;\">For</span> r = 1 <span style=\"color: blue;\">To</span> 10000\r\n\r\n   <span style=\"color: blue;\">For</span> s = 1 <span style=\"color: blue;\">To</span> 20        \r\n   \r\n      colorIndex = myWorkSheet.Cells(r,s).Interior.colorIndex        \r\n      <span style=\"color: green;\">' do more here </span>\r\n\r\n   <span style=\"color: blue;\">Next</span> s\r\n\r\n    myWorkSheet.DisposeChildInstances() \r\n   <span style=\"color: green;\">'  20 range objects are childs from myWorksheet . </span>\r\n   <span style=\"color: green;\">'  this method free all child objects from  </span>\r\n    <span style=\"color: green;\">' myWorksheet. this is a general concept in NetOffice</span>\r\n\r\n<span style=\"color: blue;\">Next</span> r\r\n\r\n<span style=\"color: green;\">' NetOffice.Factory.ProxyCount gives you the current count of </span>\r\n<span style=\"color: green;\">' open com objects in your application' </span>\r\n\r\n<span style=\"color: green;\">'in old 1.4 release it was LateBindingApi.Core.Factory.ProxyCount </span>\r\n</pre>\n</div>",
    "PostedDate": "2012-05-15T14:30:29.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "836999",
    "ThreadId": "355812",
    "Html": "<p>Thanks Sebastian,</p>\r\n<p>now it is OK. I use myWorkSheet.DisposeChildInstances()</p>\r\n<p>But how I use this code:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>LateBindingApi.Core.Factory.Initialize();\r\nNetOffice.ExcelApi.Application a = <span style=\"color: blue;\">new</span> NetOffice.ExcelApi.Application(<span style=\"color: blue;\">null</span>, ExcelDnaUtil.Application);             \r\nExcel.Range rng = ws.Range(<span style=\"color: #a31515;\">\"A1:T1000\"</span>);            \r\n<span style=\"color: blue;\">foreach</span> (Excel.Range  cell <span style=\"color: blue;\">in</span> rng) {\r\n   colorIndex = cell.Interior.ColorIndex.ToString();                \r\n}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Thanks</p>\r\n<p>Radek</p>",
    "PostedDate": "2012-05-15T21:45:30.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "837159",
    "ThreadId": "355812",
    "Html": "<pre><span style=\"color: blue;\">// the most efficent way is:<br /><br />foreach</span> (Excel.Range cell <span style=\"color: blue;\">in</span> ws.Range(<span style=\"color: #a31515;\">\"A1:T1000\"</span>)) <br />{\n   colorIndex = cell.Interior.ColorIndex.ToString();<br />   cell.Dispose();                \n}<br /><br />dont forget the application.Dispose() while shutdown.<br />application is the root object and the Dispose() call release all open proxies.   <br /><br />NetOffice Documentation: COM Proxy Management<br /><a href=\"http://netoffice.codeplex.com/wikipage?title=Tec_Documentation_English_Management\">http://netoffice.codeplex.com/wikipage?title=Tec_Documentation_English_Management</a><br /><br />Sebastian</pre>",
    "PostedDate": "2012-05-16T05:45:23.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "837601",
    "ThreadId": "355812",
    "Html": "<p>Thank you</p>\r\n<p>I writed class with Dispose method and use \"Using\" block.</p>\r\n<p>Radek</p>\r\n<p><img id=\"smallDivTip\" style=\"z-index: 90; border: 0px solid blue; left: 26px; top: 71px;\" src=\"chrome://dictionarytip/skin/dtipIconHover.png\" alt=\"\" /></p>",
    "PostedDate": "2012-05-17T02:42:47.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]