[
  {
    "Id": "1073570",
    "ThreadId": "451530",
    "Html": "Hey,<br />\n<br />\ni tried to open a csv file with Excel (using  the workbooks.open method in C#).<br />\nThe csv file has tabulators as delimiter.<br />\nThe problem is, that Excel writes the complete Text in the first collum instead of using the delimiter.<br />\n<br />\nIf i save the csv file as txt and then use the workbooks.open method with tabulator as delimiter, it works fine.<br />\n<br />\nSomeone knows how to fix the problem?<br />\n<br />\nThanks in advance,<br />\nStephan<br />\n",
    "PostedDate": "2013-07-26T09:26:40.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1074352",
    "ThreadId": "451530",
    "Html": "Hi,\r<br />\n<br />\nwith Visual Basic this code works fine:<br />\n<pre><code>                With oSheet.QueryTables.Add(Connection:=&quot;TEXT;&quot; &amp; strInFile, Destination:=oRng)\n                    .Name = strTabName\n                    .FieldNames = True\n                    .RowNumbers = False\n                    .FillAdjacentFormulas = False\n                    .PreserveFormatting = True\n                    .RefreshOnFileOpen = False\n                    .RefreshStyle = ExcelEnums.XlCellInsertionMode.xlInsertDeleteCells\n                    .SavePassword = False\n                    .SaveData = True\n                    .AdjustColumnWidth = True\n                    .RefreshPeriod = 0\n                    .TextFilePromptOnRefresh = False\n                    .TextFilePlatform = CType(1252, ExcelEnums.XlPlatform)\n                    .TextFileStartRow = 1\n                    .TextFileParseType = ExcelEnums.XlTextParsingType.xlDelimited\n                    .TextFileTextQualifier = ExcelEnums.XlTextQualifier.xlTextQualifierNone\n                    .TextFileConsecutiveDelimiter = False\n                    .TextFileTabDelimiter = False\n                    .TextFileSemicolonDelimiter = True\n                    .TextFileCommaDelimiter = False\n                    .TextFileSpaceDelimiter = False\n                    .TextFileColumnDataTypes = FieldInfo 'Range with Columdescription (Int)\n                    .TextFileTrailingMinusNumbers = True\n                    .Refresh(BackgroundQuery:=False)\n                End With</code></pre>\n\nI just try to transfer my projekt to C# and my problem is same.\r<br />\n<br />\nThis code should work, but it doesn't :(<br />\n<pre><code>                    object with_0 = oSheet.QueryTables.Add(&quot;TEXT;&quot; + strInFile, oRng);\n                    with_0.Name = strTabName;\n                    with_0.FieldNames = true;\n                    with_0.RowNumbers = false;\n                    with_0.FillAdjacentFormulas = false;\n                    with_0.PreserveFormatting = true;\n                    with_0.RefreshOnFileOpen = false;\n                    with_0.RefreshStyle = ExcelEnums.XlCellInsertionMode.xlInsertDeleteCells;\n                    with_0.SavePassword = false;\n                    with_0.SaveData = true;\n                    with_0.AdjustColumnWidth = true;\n                    with_0.RefreshPeriod = 0;\n                    with_0.TextFilePromptOnRefresh = false;\n                    with_0.TextFilePlatform = (ExcelEnums.XlPlatform)(1252);\n                    with_0.TextFileStartRow = 1;\n                    with_0.TextFileParseType = ExcelEnums.XlTextParsingType.xlDelimited;\n                    with_0.TextFileTextQualifier = ExcelEnums.XlTextQualifier.xlTextQualifierNone;\n                    with_0.TextFileConsecutiveDelimiter = false;\n                    with_0.TextFileTabDelimiter = false;\n                    with_0.TextFileSemicolonDelimiter = true;\n                    with_0.TextFileCommaDelimiter = false;\n                    with_0.TextFileSpaceDelimiter = false;\n                    with_0.TextFileColumnDataTypes = FieldInfo;\n                    with_0.TextFileTrailingMinusNumbers = true;\n                    with_0.Refresh(false);</code></pre>\n\nThe error:\r<br />\nFehler\t32\t'NetOffice.ExcelApi._Worksheet.QueryTables.get': Der Operator oder Accessor kann nicht explizit aufgerufen werden.\tcsv2xcel.cs\t464\t71\tMyProjectname\r<br />\n<br />\nHaro<br />\n",
    "PostedDate": "2013-07-29T08:53:57.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1074501",
    "ThreadId": "451530",
    "Html": "the occurs in the first line?\r<br />\nthis line:\r<br />\nobject with_0 = workSheet.QueryTables.Add(&quot;TEXT;&quot; + &quot;&quot;, null);\r<br />\nworks fine for me. but you can't use 'object' in c# of course, you have to use Excel.QueryTable or the dynamic keyword.\r<br />\n<br />\nSebastian<br />\n",
    "PostedDate": "2013-07-29T16:19:28.277-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1074774",
    "ThreadId": "451530",
    "Html": "This &quot;howto&quot; from microsoft:\r<br />\n<a href=\"http://msdn.microsoft.com/de-de/library/microsoft.office.interop.excel.workbooks.opentext%28v=office.11%29.aspx\" rel=\"nofollow\">TEXT</a>\r<br />\n<br />\nI solved my problem yesterday with:<br />\n<pre><code>var _with1 = oSheet.QueryTables.Add(connection: &quot;TEXT;&quot; + modGlobalVar.glStrCVSFullPath, destination: oRng);\n_with1.Name = strSheetName;\n_with1.FieldNames = true;\n_with1.RowNumbers = false;\n_with1.FillAdjacentFormulas = false;\n_with1.PreserveFormatting = true;\n_with1.RefreshOnFileOpen = false;\n_with1.RefreshStyle = NetOffice.ExcelApi.Enums.XlCellInsertionMode.xlInsertDeleteCells;\n_with1.SavePassword = false;\n_with1.SaveData = true;\n_with1.AdjustColumnWidth = true;\n_with1.RefreshPeriod = 0;\n_with1.TextFilePromptOnRefresh = false;\n_with1.TextFilePlatform = (ExcelEnums.XlPlatform)1252;\n_with1.TextFileStartRow = 1;\n_with1.TextFileParseType = NetOffice.ExcelApi.Enums.XlTextParsingType.xlDelimited;\n_with1.TextFileTextQualifier = NetOffice.ExcelApi.Enums.XlTextQualifier.xlTextQualifierNone;\n_with1.TextFileConsecutiveDelimiter = false;\n_with1.TextFileTabDelimiter = false;\n_with1.TextFileSemicolonDelimiter = true;\n_with1.TextFileCommaDelimiter = false;\n_with1.TextFileSpaceDelimiter = false;\n_with1.TextFileColumnDataTypes = arFieldinfo;\n_with1.TextFileTrailingMinusNumbers = true;\n_with1.Refresh(backgroundQuery: false);</code></pre>\n\narFieldinfo is an array like this:<br />\n<pre><code>int[,] arFieldinfo = { { 1, 2 }, { 2, 2 }, { 3, 2 }, { 4, 1 } };</code></pre>\n\nQuote from the site above:<br />\n<pre><code>Optional XlColumnDataType. An array containing parse information for individual columns of data. The interpretation depends on the value of DataType. When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column. The first element is the column number (1-based), and the second element is one of theXlColumnDataType constants specifying how the column is parsed.\n\nxlGeneralFormat General (1)\nxlTextFormat Text (2)\nxlMDYFormat MDY date (3)\nxlDMYFormat DMY date (4)\nxlYMDFormat YMD date (5)\nxlMYDFormat MYD date (6)\nxlDYMFormat DYM date (7)\nxlYDMFormat YDM date (8)\nxlEMDFormat EMD date (10)\nxlSkipColumn Skip Column (9)</code></pre>\n\nThe data in parentheses correspond to the numerical value of the data type (public enum XlColumnDataType).\r<br />\n<br />\nHaro<br />\n",
    "PostedDate": "2013-07-30T09:36:37.333-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]