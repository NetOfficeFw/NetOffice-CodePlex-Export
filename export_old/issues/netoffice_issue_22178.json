{
  "WorkItem": {
    "AffectedComponent": {
      "DisplayName": "",
      "Name": ""
    },
    "AssignedTo": "",
    "ClosedBy": "",
    "ClosedComment": "",
    "CommentCount": 0,
    "Custom": "",
    "Description": "Using NetOffice, all items contained in ExcelApi.FormatConditions resolve to be of type ExcelApi.FormatCondition. Depending on what type of conditioning has been applied, the items should be of varying types, such as Top10 or Databar (see https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.xlformatconditiontype.aspx for format condition types).\n\nA workaround for this is to do something like:\nvar defaultCondition = Application.ActiveSheet.Range(\"A1\").FormatConditions[1];\nvar typedCondition = new Top10(defaultCondition);\n//typedCondition.Rank is now available, while defaultCondition.Rank throws an exception\n\nThe specific format condition types should inherit from FormatCondition and FormatConditions[index] should automatically resolve the type and return the derived type object.",
    "HtmlDescription": "Using NetOffice, all items contained in ExcelApi.FormatConditions resolve to be of type ExcelApi.FormatCondition. Depending on what type of conditioning has been applied, the items should be of varying types, such as Top10 or Databar (see <a href=\"https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.xlformatconditiontype.aspx\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.xlformatconditiontype.aspx</a> for format condition types).<br />\n<br />\nA workaround for this is to do something like:<br />\nvar defaultCondition = Application.ActiveSheet.Range(&quot;A1&quot;).FormatConditions[1];<br />\nvar typedCondition = new Top10(defaultCondition);<br />\n//typedCondition.Rank is now available, while defaultCondition.Rank throws an exception<br />\n<br />\nThe specific format condition types should inherit from FormatCondition and FormatConditions[index] should automatically resolve the type and return the derived type object.<br />\n",
    "PlainDescription": "Using NetOffice, all items contained in ExcelApi.FormatConditions resolve to be of type ExcelApi.FormatCondition. Depending on what type of conditioning has been applied, the items should be of varying types, such as Top10 or Databar (see https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.xlformatconditiontype.aspx for format condition types).\n\nA workaround for this is to do something like:\nvar defaultCondition = Application.ActiveSheet.Range(\"A1\").FormatConditions[1];\nvar typedCondition = new Top10(defaultCondition);\n//typedCondition.Rank is now available, while defaultCondition.Rank throws an exception\n\nThe specific format condition types should inherit from FormatCondition and FormatConditions[index] should automatically resolve the type and return the derived type object.\n",
    "LastUpdatedBy": "hotn",
    "LastUpdatedDate": "2016-02-24T18:46:51.367+01:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "netoffice",
    "ReportedBy": "hotn",
    "ReportedDate": "2016-02-24T18:46:51.367+01:00",
    "CanContactReportedByUser": false,
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Excel FormatConditions do not resolve to derived types",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 22178,
    "HasUserVoted": false
  },
  "FileAttachments": [],
  "Comments": [],
  "CanDeleteWorkItem": true,
  "CanDeleteComments": true
}